<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFiltersHamburgerUI />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
    <ZoneVisibilityControl />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='data' inline='true' name='federated.1st5jwa0chdwf11dyco370748ksl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.16pbews1pt471j11iz6lc1bvaeib'>
            <connection class='textscan' directory='C:/Users/Lenovo/Downloads' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.16pbews1pt471j11iz6lc1bvaeib' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='stn_code' ordinal='0' />
            <column datatype='date' date-parse-format='dd-MM-yy' name='sampling_date' ordinal='1' />
            <column datatype='string' name='state' ordinal='2' />
            <column datatype='string' name='location' ordinal='3' />
            <column datatype='string' name='agency' ordinal='4' />
            <column datatype='string' name='type' ordinal='5' />
            <column datatype='real' name='so2' ordinal='6' />
            <column datatype='real' name='no2' ordinal='7' />
            <column datatype='integer' name='rspm' ordinal='8' />
            <column datatype='integer' name='spm' ordinal='9' />
            <column datatype='string' name='location_monitoring_station' ordinal='10' />
            <column datatype='string' name='pm2_5' ordinal='11' />
            <column datatype='date' name='date' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.16pbews1pt471j11iz6lc1bvaeib' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='stn_code' ordinal='0' />
            <column datatype='date' date-parse-format='dd-MM-yy' name='sampling_date' ordinal='1' />
            <column datatype='string' name='state' ordinal='2' />
            <column datatype='string' name='location' ordinal='3' />
            <column datatype='string' name='agency' ordinal='4' />
            <column datatype='string' name='type' ordinal='5' />
            <column datatype='real' name='so2' ordinal='6' />
            <column datatype='real' name='no2' ordinal='7' />
            <column datatype='integer' name='rspm' ordinal='8' />
            <column datatype='integer' name='spm' ordinal='9' />
            <column datatype='string' name='location_monitoring_station' ordinal='10' />
            <column datatype='string' name='pm2_5' ordinal='11' />
            <column datatype='date' name='date' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stn_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[stn_code]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>stn_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A0BFF32DA57D422CAE8AEF0CAFBDF895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sampling_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[sampling_date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>sampling_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A0BFF32DA57D422CAE8AEF0CAFBDF895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A0BFF32DA57D422CAE8AEF0CAFBDF895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A0BFF32DA57D422CAE8AEF0CAFBDF895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>agency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[agency]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>agency</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A0BFF32DA57D422CAE8AEF0CAFBDF895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A0BFF32DA57D422CAE8AEF0CAFBDF895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>so2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[so2]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>so2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A0BFF32DA57D422CAE8AEF0CAFBDF895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>no2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[no2]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>no2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A0BFF32DA57D422CAE8AEF0CAFBDF895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rspm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rspm]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>rspm</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A0BFF32DA57D422CAE8AEF0CAFBDF895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>spm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[spm]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>spm</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A0BFF32DA57D422CAE8AEF0CAFBDF895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_monitoring_station</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location_monitoring_station]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>location_monitoring_station</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A0BFF32DA57D422CAE8AEF0CAFBDF895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pm2_5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pm2_5]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>pm2_5</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A0BFF32DA57D422CAE8AEF0CAFBDF895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data.csv_A0BFF32DA57D422CAE8AEF0CAFBDF895]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Air quality Category of SO2' datatype='string' name='[Calculation_901564401351589888]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [so2] &lt;100 THEN &quot;GOOD&quot;&#13;&#10;ELSEIF [so2] &gt;100 OR [so2]&lt;200 THEN &quot;Fair&quot;&#13;&#10;ELSEIF [so2] &gt;200 OR [so2]&lt;300 THEN &quot;Poor&quot;&#13;&#10;ELSEIF [so2] &gt;300 OR [so2]&lt;600 THEN &quot;Very Poor&quot;&#13;&#10;ELSEIF [so2] &gt; 600 THEN &quot;Extremly Poor&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Type (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[type]' new-bin='true'>
          <bin default-name='false' value='&quot;Industrial Area&quot;'>
            <value>&quot;Industrial Area&quot;</value>
            <value>&quot;Industrial Areas&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Sensitive Area&quot;'>
            <value>&quot;Sensitive Area&quot;</value>
            <value>&quot;Sensitive Areas&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='data.csv' datatype='table' name='[__tableau_internal_object_id__].[data.csv_A0BFF32DA57D422CAE8AEF0CAFBDF895]' role='measure' type='quantitative' />
      <column caption='Agency' datatype='string' name='[agency]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='City' datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Amlai&quot;' value='&quot;Shahdol&quot;' />
          <semantic-value key='&quot;Amona&quot;' value='&quot;Goa&quot;' />
          <semantic-value key='&quot;Ananthapur&quot;' value='&quot;Anantapur&quot;' />
          <semantic-value key='&quot;Anklesvar&quot;' value='&quot;Bharuch&quot;' />
          <semantic-value key='&quot;Anpara&quot;' value='&quot;Anuppur&quot;' />
          <semantic-value key='&quot;Assanora&quot;' value='&quot;Goa&quot;' />
          <semantic-value key='&quot;Aurangabad (MS)&quot;' value='&quot;Aurangabad&quot;' />
          <semantic-value key='&quot;Baroda&quot;' value='&quot;Vadodara&quot;' />
          <semantic-value key='&quot;Bathinda&quot;' value='&quot;Bathinda&quot;' />
          <semantic-value key='&quot;Belgaum&quot;' value='&quot;Belgaum&quot;' />
          <semantic-value key='&quot;Berhampur&quot;' value='&quot;Burhanpur&quot;' />
          <semantic-value key='&quot;Bharuch&quot;' value='&quot;Bharuch&quot;' />
          <semantic-value key='&quot;Bhilai&quot;' value='&quot;Durg&quot;' />
          <semantic-value key='&quot;Bhilai Nagar&quot;' value='&quot;Durg&quot;' />
          <semantic-value key='&quot;Bicholim&quot;' value='&quot;Goa&quot;' />
          <semantic-value key='&quot;Byrnihat&quot;' value='&quot;Ri-Bhoi&quot;' />
          <semantic-value key='&quot;Champhai&quot;' value='&quot;Chamoli&quot;' />
          <semantic-value key='&quot;Chandarpur&quot;' value='&quot;Chandrapur&quot;' />
          <semantic-value key='&quot;Codli&quot;' value='&quot;Goa&quot;' />
          <semantic-value key='&quot;Daman Diu &amp; Nagar&quot;' value='&quot;Daman&quot;' />
          <semantic-value key='&quot;Damtal&quot;' value='&quot;Indora&quot;' />
          <semantic-value key='&quot;DANKUNI&quot;' value='&quot;Kolkata&quot;' />
          <semantic-value key='&quot;Daranga&quot;' value='&quot;Mangaldoi&quot;' />
          <semantic-value key='&quot;Dawki&quot;' value='&quot;Mehndawal&quot;' />
          <semantic-value key='&quot;Dehradoon&quot;' value='&quot;Dehra Dun&quot;' />
          <semantic-value key='&quot;Dera Baba&quot;' value='&quot;Gurdaspur&quot;' />
          <semantic-value key='&quot;Dera Bassi&quot;' value='&quot;Chandigarh&quot;' />
          <semantic-value key='&quot;Dhanbad&quot;' value='&quot;Dhanbad&quot;' />
          <semantic-value key='&quot;Dharamshala&quot;' value='&quot;Dharmshala&quot;' />
          <semantic-value key='&quot;Domlur&quot;' value='&quot;Bengaluru&quot;' />
          <semantic-value key='&quot;Durgapur (WB)&quot;' value='&quot;Durgapur&quot;' />
          <semantic-value key='&quot;Gajroula&quot;' value='&quot;Amroha&quot;' />
          <semantic-value key='&quot;Gobindgarh&quot;' value='&quot;Gobichettipalayam&quot;' />
          <semantic-value key='&quot;Greater Mumbai&quot;' value='&quot;Mumbai&quot;' />
          <semantic-value key='&quot;Honda&quot;' value='&quot;Honavar&quot;' />
          <semantic-value key='&quot;Hyderabad&quot;' value='&quot;Hyderabad&quot;' />
          <semantic-value key='&quot;Jamshedpur&quot;' value='&quot;Jamshedpur&quot;' />
          <semantic-value key='&quot;Jharia&quot;' value='&quot;Dhanbad&quot;' />
          <semantic-value key='&quot;Kala Amb&quot;' value='&quot;Nahan&quot;' />
          <semantic-value key='&quot;Kalinga Nagar&quot;' value='&quot;Jaipur&quot;' />
          <semantic-value key='&quot;Karimnagar&quot;' value='&quot;Karimnagar&quot;' />
          <semantic-value key='&quot;Keonjhar&quot;' value='&quot;Kendujhar&quot;' />
          <semantic-value key='&quot;Khadoli&quot;' value='&quot;Nagar&quot;' />
          <semantic-value key='&quot;Khammam&quot;' value='&quot;Khammam&quot;' />
          <semantic-value key='&quot;Khliehriat&quot;' value='&quot;Khilchipur&quot;' />
          <semantic-value key='&quot;Kolasib&quot;' value='&quot;Kolar&quot;' />
          <semantic-value key='&quot;Korba&quot;' value='&quot;Korba&quot;' />
          <semantic-value key='&quot;Kothur&quot;' value='&quot;Hyderabad&quot;' />
          <semantic-value key='&quot;Kotttayam&quot;' value='&quot;Kottayam&quot;' />
          <semantic-value key='&quot;Kundaim&quot;' value='&quot;Ponda&quot;' />
          <semantic-value key='&quot;Lote&quot;' value='&quot;Khed&quot;' />
          <semantic-value key='&quot;MALDAH&quot;' value='&quot;Malda&quot;' />
          <semantic-value key='&quot;Manali&quot;' value='&quot;Kullu&quot;' />
          <semantic-value key='&quot;Mapusa&quot;' value='&quot;Goa&quot;' />
          <semantic-value key='&quot;Nalco&quot;' value='&quot;Koraput&quot;' />
          <semantic-value key='&quot;Nalgonda&quot;' value='&quot;Nalgonda&quot;' />
          <semantic-value key='&quot;Naya Nangal&quot;' value='&quot;Rupnagar&quot;' />
          <semantic-value key='&quot;Nizamabad&quot;' value='&quot;Nizamabad&quot;' />
          <semantic-value key='&quot;Paradeep&quot;' value='&quot;Paradip&quot;' />
          <semantic-value key='&quot;Parwanoo&quot;' value='&quot;Solan&quot;' />
          <semantic-value key='&quot;Patancheru&quot;' value='&quot;Hyderabad&quot;' />
          <semantic-value key='&quot;Pondicherry&quot;' value='&quot;Puducherry&quot;' />
          <semantic-value key='&quot;Rai Bareilly&quot;' value='&quot;Rae Bareli&quot;' />
          <semantic-value key='&quot;Raipur&quot;' value='&quot;Raipur&quot;' />
          <semantic-value key='&quot;Ramagundam&quot;' value='&quot;Peddapalli&quot;' />
          <semantic-value key='&quot;Ranebennur&quot;' value='&quot;Haveri&quot;' />
          <semantic-value key='&quot;Rayagada&quot;' value='&quot;Rayadrug&quot;' />
          <semantic-value key='&quot;Renusagar&quot;' value='&quot;Renuka&quot;' />
          <semantic-value key='&quot;Rudrapur&quot;' value='&quot;Rudarpur&quot;' />
          <semantic-value key='&quot;Sangareddy&quot;' value='&quot;Hyderabad&quot;' />
          <semantic-value key='&quot;Saraikela Kharsawan&quot;' value='&quot;Saraikela&quot;' />
          <semantic-value key='&quot;Sarigam&quot;' value='&quot;Srisailam&quot;' />
          <semantic-value key='&quot;Silcher&quot;' value='&quot;Silchar&quot;' />
          <semantic-value key='&quot;Sindri&quot;' value='&quot;Sindgi&quot;' />
          <semantic-value key='&quot;Sivasagar&quot;' value='&quot;Sivaganga&quot;' />
          <semantic-value key='&quot;South Suburban&quot;' value='&quot;Lower subansiri&quot;' />
          <semantic-value key='&quot;Sunder Nagar&quot;' value='&quot;Sundarnagar&quot;' />
          <semantic-value key='&quot;Tarapur&quot;' value='&quot;Palghar&quot;' />
          <semantic-value key='&quot;Thissur&quot;' value='&quot;Thiruvarur&quot;' />
          <semantic-value key='&quot;Thoothukudi&quot;' value='&quot;Thoubal&quot;' />
          <semantic-value key='&quot;Tilamol&quot;' value='&quot;Goa&quot;' />
          <semantic-value key='&quot;Trichy&quot;' value='&quot;Tiruchchirappalli&quot;' />
          <semantic-value key='&quot;Trivendrum&quot;' value='&quot;Trivandrum&quot;' />
          <semantic-value key='&quot;Tumkur&quot;' value='&quot;Tumkur&quot;' />
          <semantic-value key='&quot;Tura&quot;' value='&quot;Tura&quot;' />
          <semantic-value key='&quot;Turicorin&quot;' value='&quot;Tuticorin&quot;' />
          <semantic-value key='&quot;Tuticorin&quot;' value='&quot;Tuticorin&quot;' />
          <semantic-value key='&quot;Udaipur&quot;' value='&quot;Udaipur&quot;' />
          <semantic-value key='&quot;Ujjain&quot;' value='&quot;Ujjain&quot;' />
          <semantic-value key='&quot;Ulhasnagar&quot;' value='&quot;Ulhasnagar&quot;' />
          <semantic-value key='&quot;ULUBERIA&quot;' value='&quot;Howrah&quot;' />
          <semantic-value key='&quot;Umsning&quot;' value='&quot;Ri-Bhoi&quot;' />
          <semantic-value key='&quot;Una&quot;' value='&quot;Una&quot;' />
          <semantic-value key='&quot;Unnao&quot;' value='&quot;Unnao&quot;' />
          <semantic-value key='&quot;Usgao&quot;' value='&quot;Goa&quot;' />
          <semantic-value key='&quot;Vadodara&quot;' value='&quot;Vadodara&quot;' />
          <semantic-value key='&quot;Vapi&quot;' value='&quot;Valsad&quot;' />
          <semantic-value key='&quot;VAPI&quot;' value='&quot;Valsad&quot;' />
          <semantic-value key='&quot;Varanasi&quot;' value='&quot;Varanasi&quot;' />
          <semantic-value key='&quot;Vasco&quot;' value='&quot;Panjim&quot;' />
          <semantic-value key='&quot;Vijayawada&quot;' value='&quot;Vijayawada&quot;' />
          <semantic-value key='&quot;Visakhapatnam&quot;' value='&quot;Vishakhapatnam&quot;' />
          <semantic-value key='&quot;Vishakhapatnam&quot;' value='&quot;Vishakhapatnam&quot;' />
          <semantic-value key='&quot;Vizianagaram&quot;' value='&quot;Vizianagaram&quot;' />
          <semantic-value key='&quot;Warangal&quot;' value='&quot;Warangal&quot;' />
          <semantic-value key='&quot;Wayanad&quot;' value='&quot;Kalpetta&quot;' />
          <semantic-value key='&quot;West Singhbhum&quot;' value='&quot;Chaibasa&quot;' />
          <semantic-value key='&quot;Yamuna Nagar&quot;' value='&quot;Yamunanagar&quot;' />
          <semantic-value key='&quot;Yamunanagar&quot;' value='&quot;Yamunanagar&quot;' />
        </semantic-values>
      </column>
      <column caption='Location Monitoring Station' datatype='string' name='[location_monitoring_station]' role='dimension' type='nominal' />
      <column caption='No2' datatype='real' name='[no2]' role='measure' type='quantitative' />
      <column caption='Pm2 5' datatype='string' name='[pm2_5]' role='dimension' type='nominal' />
      <column caption='Rspm' datatype='integer' name='[rspm]' role='measure' type='quantitative' />
      <column caption='Sampling Date' datatype='date' name='[sampling_date]' role='dimension' type='ordinal' />
      <column caption='So2' datatype='real' name='[so2]' role='measure' type='quantitative' />
      <column caption='Spm' datatype='integer' name='[spm]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Andhra Pradesh&quot;' value='&quot;Andhra Pradesh&quot;' />
          <semantic-value key='&quot;Arunachal Pradesh&quot;' value='&quot;Arunachal Pradesh&quot;' />
          <semantic-value key='&quot;Assam&quot;' value='&quot;Assam&quot;' />
          <semantic-value key='&quot;Bihar&quot;' value='&quot;Bihar&quot;' />
          <semantic-value key='&quot;Chandigarh&quot;' value='&quot;Chandigarh&quot;' />
          <semantic-value key='&quot;Chhattisgarh&quot;' value='&quot;Chhattisgarh&quot;' />
          <semantic-value key='&quot;Dadra &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli and Daman and Diu&quot;' />
          <semantic-value key='&quot;Daman &amp; Diu&quot;' value='&quot;Dadra and Nagar Haveli and Daman and Diu&quot;' />
          <semantic-value key='&quot;Delhi&quot;' value='&quot;Delhi&quot;' />
          <semantic-value key='&quot;Goa&quot;' value='&quot;Goa&quot;' />
          <semantic-value key='&quot;Gujarat&quot;' value='&quot;Gujarat&quot;' />
          <semantic-value key='&quot;Haryana&quot;' value='&quot;Haryana&quot;' />
          <semantic-value key='&quot;Himachal Pradesh&quot;' value='&quot;Himachal Pradesh&quot;' />
          <semantic-value key='&quot;Jammu &amp; Kashmir&quot;' value='&quot;Jammu and Kashmir&quot;' />
          <semantic-value key='&quot;Jharkhand&quot;' value='&quot;Jharkhand&quot;' />
          <semantic-value key='&quot;Karnataka&quot;' value='&quot;Karnataka&quot;' />
          <semantic-value key='&quot;Kerala&quot;' value='&quot;Kerala&quot;' />
          <semantic-value key='&quot;Madhya Pradesh&quot;' value='&quot;Madhya Pradesh&quot;' />
          <semantic-value key='&quot;Maharashtra&quot;' value='&quot;Maharashtra&quot;' />
          <semantic-value key='&quot;Manipur&quot;' value='&quot;Manipur&quot;' />
          <semantic-value key='&quot;Meghalaya&quot;' value='&quot;Meghalaya&quot;' />
          <semantic-value key='&quot;Mizoram&quot;' value='&quot;Mizoram&quot;' />
          <semantic-value key='&quot;Nagaland&quot;' value='&quot;Nagaland&quot;' />
          <semantic-value key='&quot;Odisha&quot;' value='&quot;Orissa&quot;' />
          <semantic-value key='&quot;Puducherry&quot;' value='&quot;Puducherry&quot;' />
          <semantic-value key='&quot;Punjab&quot;' value='&quot;Punjab&quot;' />
          <semantic-value key='&quot;Rajasthan&quot;' value='&quot;Rajasthan&quot;' />
          <semantic-value key='&quot;Sikkim&quot;' value='&quot;Sikkim&quot;' />
          <semantic-value key='&quot;Tamil Nadu&quot;' value='&quot;Tamil Nadu&quot;' />
          <semantic-value key='&quot;Telangana&quot;' value='&quot;Telangana&quot;' />
          <semantic-value key='&quot;Uttar Pradesh&quot;' value='&quot;Uttar Pradesh&quot;' />
          <semantic-value key='&quot;Uttarakhand&quot;' value='&quot;Uttarakhand&quot;' />
          <semantic-value key='&quot;Uttaranchal&quot;' value='&quot;Uttarakhand&quot;' />
          <semantic-value key='&quot;West Bengal&quot;' value='&quot;West Bengal&quot;' />
        </semantic-values>
      </column>
      <column caption='Stn Code' datatype='integer' name='[stn_code]' role='dimension' type='ordinal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column-instance column='[no2]' derivation='Avg' name='[avg:no2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[so2]' derivation='Avg' name='[avg:so2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[rspm]' derivation='None' name='[none:rspm:ok]' pivot='key' type='ordinal' />
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <column-instance column='[no2]' derivation='Sum' name='[sum:no2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[so2]' derivation='Sum' name='[sum:so2:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='State, City'>
          <field>[state]</field>
          <field>[location]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:rspm:ok]' type='palette'>
            <map to='#499894'>
              <bucket>10</bucket>
            </map>
            <map to='#499894'>
              <bucket>30</bucket>
            </map>
            <map to='#499894'>
              <bucket>50</bucket>
            </map>
            <map to='#499894'>
              <bucket>70</bucket>
            </map>
            <map to='#499894'>
              <bucket>90</bucket>
            </map>
            <map to='#499894'>
              <bucket>110</bucket>
            </map>
            <map to='#499894'>
              <bucket>130</bucket>
            </map>
            <map to='#499894'>
              <bucket>150</bucket>
            </map>
            <map to='#499894'>
              <bucket>170</bucket>
            </map>
            <map to='#499894'>
              <bucket>190</bucket>
            </map>
            <map to='#499894'>
              <bucket>210</bucket>
            </map>
            <map to='#499894'>
              <bucket>230</bucket>
            </map>
            <map to='#499894'>
              <bucket>250</bucket>
            </map>
            <map to='#499894'>
              <bucket>270</bucket>
            </map>
            <map to='#499894'>
              <bucket>290</bucket>
            </map>
            <map to='#499894'>
              <bucket>310</bucket>
            </map>
            <map to='#499894'>
              <bucket>330</bucket>
            </map>
            <map to='#499894'>
              <bucket>350</bucket>
            </map>
            <map to='#499894'>
              <bucket>370</bucket>
            </map>
            <map to='#499894'>
              <bucket>390</bucket>
            </map>
            <map to='#499894'>
              <bucket>410</bucket>
            </map>
            <map to='#499894'>
              <bucket>430</bucket>
            </map>
            <map to='#499894'>
              <bucket>450</bucket>
            </map>
            <map to='#499894'>
              <bucket>470</bucket>
            </map>
            <map to='#499894'>
              <bucket>490</bucket>
            </map>
            <map to='#499894'>
              <bucket>510</bucket>
            </map>
            <map to='#499894'>
              <bucket>530</bucket>
            </map>
            <map to='#499894'>
              <bucket>552</bucket>
            </map>
            <map to='#499894'>
              <bucket>574</bucket>
            </map>
            <map to='#499894'>
              <bucket>601</bucket>
            </map>
            <map to='#499894'>
              <bucket>641</bucket>
            </map>
            <map to='#499894'>
              <bucket>702</bucket>
            </map>
            <map to='#499894'>
              <bucket>771</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>22</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>42</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>62</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>82</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>102</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>122</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>142</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>162</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>182</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>202</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>222</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>242</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>262</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>282</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>302</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>322</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>342</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>362</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>382</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>402</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>422</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>442</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>462</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>482</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>502</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>522</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>543</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>565</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>593</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>622</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>673</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>726</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>838</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1100</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>6</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>26</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>46</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>66</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>86</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>106</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>126</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>146</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>166</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>186</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>206</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>226</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>246</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>266</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>286</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>306</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>326</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>346</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>366</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>386</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>406</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>426</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>446</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>466</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>486</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>506</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>526</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>548</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>569</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>597</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>626</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>627</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>690</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>754</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>946</bucket>
            </map>
            <map to='#79706e'>
              <bucket>14</bucket>
            </map>
            <map to='#79706e'>
              <bucket>34</bucket>
            </map>
            <map to='#79706e'>
              <bucket>54</bucket>
            </map>
            <map to='#79706e'>
              <bucket>74</bucket>
            </map>
            <map to='#79706e'>
              <bucket>94</bucket>
            </map>
            <map to='#79706e'>
              <bucket>114</bucket>
            </map>
            <map to='#79706e'>
              <bucket>134</bucket>
            </map>
            <map to='#79706e'>
              <bucket>154</bucket>
            </map>
            <map to='#79706e'>
              <bucket>174</bucket>
            </map>
            <map to='#79706e'>
              <bucket>194</bucket>
            </map>
            <map to='#79706e'>
              <bucket>214</bucket>
            </map>
            <map to='#79706e'>
              <bucket>234</bucket>
            </map>
            <map to='#79706e'>
              <bucket>254</bucket>
            </map>
            <map to='#79706e'>
              <bucket>274</bucket>
            </map>
            <map to='#79706e'>
              <bucket>294</bucket>
            </map>
            <map to='#79706e'>
              <bucket>314</bucket>
            </map>
            <map to='#79706e'>
              <bucket>334</bucket>
            </map>
            <map to='#79706e'>
              <bucket>354</bucket>
            </map>
            <map to='#79706e'>
              <bucket>374</bucket>
            </map>
            <map to='#79706e'>
              <bucket>394</bucket>
            </map>
            <map to='#79706e'>
              <bucket>414</bucket>
            </map>
            <map to='#79706e'>
              <bucket>434</bucket>
            </map>
            <map to='#79706e'>
              <bucket>454</bucket>
            </map>
            <map to='#79706e'>
              <bucket>474</bucket>
            </map>
            <map to='#79706e'>
              <bucket>494</bucket>
            </map>
            <map to='#79706e'>
              <bucket>514</bucket>
            </map>
            <map to='#79706e'>
              <bucket>534</bucket>
            </map>
            <map to='#79706e'>
              <bucket>556</bucket>
            </map>
            <map to='#79706e'>
              <bucket>581</bucket>
            </map>
            <map to='#79706e'>
              <bucket>608</bucket>
            </map>
            <map to='#79706e'>
              <bucket>649</bucket>
            </map>
            <map to='#79706e'>
              <bucket>709</bucket>
            </map>
            <map to='#79706e'>
              <bucket>790</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>11</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>31</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>51</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>71</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>91</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>111</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>131</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>151</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>171</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>191</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>211</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>231</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>251</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>271</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>291</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>311</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>331</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>351</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>371</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>391</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>411</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>431</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>451</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>471</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>491</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>511</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>531</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>553</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>578</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>604</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>643</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>703</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>773</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>7</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>27</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>47</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>67</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>87</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>107</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>127</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>147</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>167</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>187</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>207</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>227</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>247</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>267</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>287</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>307</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>327</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>347</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>367</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>387</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>407</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>427</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>447</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>467</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>487</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>507</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>527</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>549</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>570</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>598</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>629</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>694</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>764</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>975</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>20</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>40</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>60</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>80</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>100</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>120</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>140</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>160</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>180</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>200</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>220</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>240</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>260</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>280</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>300</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>320</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>340</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>360</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>380</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>400</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>420</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>440</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>460</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>480</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>500</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>520</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>541</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>563</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>591</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>619</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>666</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>724</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>819</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>3</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>23</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>43</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>63</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>83</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>103</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>123</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>143</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>163</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>183</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>203</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>223</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>243</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>263</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>283</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>303</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>323</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>343</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>363</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>383</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>403</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>423</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>443</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>463</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>483</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>503</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>523</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>544</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>566</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>594</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>623</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>640</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>678</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>727</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>840</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>18</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>38</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>58</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>78</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>98</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>118</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>138</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>158</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>178</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>198</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>218</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>238</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>258</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>278</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>298</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>318</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>338</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>358</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>378</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>398</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>418</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>438</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>458</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>478</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>498</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>518</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>539</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>560</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>588</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>613</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>659</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>721</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>802</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>8</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>28</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>48</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>68</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>88</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>108</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>128</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>148</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>168</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>188</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>208</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>228</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>248</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>268</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>288</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>308</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>328</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>348</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>368</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>388</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>408</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>428</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>448</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>468</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>488</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>508</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>528</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>550</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>571</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>599</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>636</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>697</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>767</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>981</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>15</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>35</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>55</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>75</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>95</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>115</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>135</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>155</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>175</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>195</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>215</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>235</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>255</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>275</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>295</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>315</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>335</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>355</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>375</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>395</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>415</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>435</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>455</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>475</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>495</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>515</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>536</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>557</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>585</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>609</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>652</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>711</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>794</bucket>
            </map>
            <map to='#d37295'>
              <bucket>16</bucket>
            </map>
            <map to='#d37295'>
              <bucket>36</bucket>
            </map>
            <map to='#d37295'>
              <bucket>56</bucket>
            </map>
            <map to='#d37295'>
              <bucket>76</bucket>
            </map>
            <map to='#d37295'>
              <bucket>96</bucket>
            </map>
            <map to='#d37295'>
              <bucket>116</bucket>
            </map>
            <map to='#d37295'>
              <bucket>136</bucket>
            </map>
            <map to='#d37295'>
              <bucket>156</bucket>
            </map>
            <map to='#d37295'>
              <bucket>176</bucket>
            </map>
            <map to='#d37295'>
              <bucket>196</bucket>
            </map>
            <map to='#d37295'>
              <bucket>216</bucket>
            </map>
            <map to='#d37295'>
              <bucket>236</bucket>
            </map>
            <map to='#d37295'>
              <bucket>256</bucket>
            </map>
            <map to='#d37295'>
              <bucket>276</bucket>
            </map>
            <map to='#d37295'>
              <bucket>296</bucket>
            </map>
            <map to='#d37295'>
              <bucket>316</bucket>
            </map>
            <map to='#d37295'>
              <bucket>336</bucket>
            </map>
            <map to='#d37295'>
              <bucket>356</bucket>
            </map>
            <map to='#d37295'>
              <bucket>376</bucket>
            </map>
            <map to='#d37295'>
              <bucket>396</bucket>
            </map>
            <map to='#d37295'>
              <bucket>416</bucket>
            </map>
            <map to='#d37295'>
              <bucket>436</bucket>
            </map>
            <map to='#d37295'>
              <bucket>456</bucket>
            </map>
            <map to='#d37295'>
              <bucket>476</bucket>
            </map>
            <map to='#d37295'>
              <bucket>496</bucket>
            </map>
            <map to='#d37295'>
              <bucket>516</bucket>
            </map>
            <map to='#d37295'>
              <bucket>537</bucket>
            </map>
            <map to='#d37295'>
              <bucket>558</bucket>
            </map>
            <map to='#d37295'>
              <bucket>586</bucket>
            </map>
            <map to='#d37295'>
              <bucket>611</bucket>
            </map>
            <map to='#d37295'>
              <bucket>654</bucket>
            </map>
            <map to='#d37295'>
              <bucket>717</bucket>
            </map>
            <map to='#d37295'>
              <bucket>800</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>19</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>39</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>59</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>79</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>99</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>119</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>139</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>159</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>179</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>199</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>219</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>239</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>259</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>279</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>299</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>319</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>339</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>359</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>379</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>399</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>419</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>439</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>459</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>479</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>499</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>519</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>540</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>562</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>589</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>618</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>665</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>722</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>803</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>21</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>41</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>61</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>81</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>101</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>121</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>141</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>161</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>181</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>201</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>221</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>241</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>261</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>281</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>301</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>321</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>341</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>361</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>381</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>401</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>421</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>441</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>461</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>481</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>501</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>521</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>542</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>564</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>592</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>621</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>667</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>725</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>828</bucket>
            </map>
            <map to='#e15759'>
              <bucket>12</bucket>
            </map>
            <map to='#e15759'>
              <bucket>32</bucket>
            </map>
            <map to='#e15759'>
              <bucket>52</bucket>
            </map>
            <map to='#e15759'>
              <bucket>72</bucket>
            </map>
            <map to='#e15759'>
              <bucket>92</bucket>
            </map>
            <map to='#e15759'>
              <bucket>112</bucket>
            </map>
            <map to='#e15759'>
              <bucket>132</bucket>
            </map>
            <map to='#e15759'>
              <bucket>152</bucket>
            </map>
            <map to='#e15759'>
              <bucket>172</bucket>
            </map>
            <map to='#e15759'>
              <bucket>192</bucket>
            </map>
            <map to='#e15759'>
              <bucket>212</bucket>
            </map>
            <map to='#e15759'>
              <bucket>232</bucket>
            </map>
            <map to='#e15759'>
              <bucket>252</bucket>
            </map>
            <map to='#e15759'>
              <bucket>272</bucket>
            </map>
            <map to='#e15759'>
              <bucket>292</bucket>
            </map>
            <map to='#e15759'>
              <bucket>312</bucket>
            </map>
            <map to='#e15759'>
              <bucket>332</bucket>
            </map>
            <map to='#e15759'>
              <bucket>352</bucket>
            </map>
            <map to='#e15759'>
              <bucket>372</bucket>
            </map>
            <map to='#e15759'>
              <bucket>392</bucket>
            </map>
            <map to='#e15759'>
              <bucket>412</bucket>
            </map>
            <map to='#e15759'>
              <bucket>432</bucket>
            </map>
            <map to='#e15759'>
              <bucket>452</bucket>
            </map>
            <map to='#e15759'>
              <bucket>472</bucket>
            </map>
            <map to='#e15759'>
              <bucket>492</bucket>
            </map>
            <map to='#e15759'>
              <bucket>512</bucket>
            </map>
            <map to='#e15759'>
              <bucket>532</bucket>
            </map>
            <map to='#e15759'>
              <bucket>554</bucket>
            </map>
            <map to='#e15759'>
              <bucket>579</bucket>
            </map>
            <map to='#e15759'>
              <bucket>605</bucket>
            </map>
            <map to='#e15759'>
              <bucket>644</bucket>
            </map>
            <map to='#e15759'>
              <bucket>704</bucket>
            </map>
            <map to='#e15759'>
              <bucket>775</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>9</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>29</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>49</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>69</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>89</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>109</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>129</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>149</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>169</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>189</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>209</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>229</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>249</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>269</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>289</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>309</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>329</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>349</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>369</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>389</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>409</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>429</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>449</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>469</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>489</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>509</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>529</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>551</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>572</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>600</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>637</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>700</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>769</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>4</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>24</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>44</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>64</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>84</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>104</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>124</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>144</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>164</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>184</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>204</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>224</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>244</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>264</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>284</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>304</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>324</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>344</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>364</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>384</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>404</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>424</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>444</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>464</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>484</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>504</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>524</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>546</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>567</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>595</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>624</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>683</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>730</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>841</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>17</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>37</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>57</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>77</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>97</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>117</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>137</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>157</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>177</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>197</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>217</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>237</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>257</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>277</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>297</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>317</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>337</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>357</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>377</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>397</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>417</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>437</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>457</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>477</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>497</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>517</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>538</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>559</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>587</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>612</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>658</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>720</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>801</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>13</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>33</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>53</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>73</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>93</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>113</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>133</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>153</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>173</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>193</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>213</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>233</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>253</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>273</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>293</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>313</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>333</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>353</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>373</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>393</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>413</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>433</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>453</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>473</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>493</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>513</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>533</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>555</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>580</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>606</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>645</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>705</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>782</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>5</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>25</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>45</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>65</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>85</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>105</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>125</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>145</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>165</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>185</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>205</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>225</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>245</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>265</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>285</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>305</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>325</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>345</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>365</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>385</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>405</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>425</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>445</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>465</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>485</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>505</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>525</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>547</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>568</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>596</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>625</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>686</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>733</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>897</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:type:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Sensitive Areas&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Sensitive Area&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Sensitive&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;RIRUO&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Residential, Rural and other Areas&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Residential and others&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Residential&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Industrial Areas&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Industrial Area&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Industrial&quot;</bucket>
            </map>
            <map to='#f59536'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amona&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baruipur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chandarpur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Davangere&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faridkot&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hisar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jodhpur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kolasib&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madurai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nagda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panjim&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ranchi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sarigam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tezpur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Una&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Agra&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aurangabad (MS)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bidar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cuncolim&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dibrugarh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guwahati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jalandhar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Khajuraho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kurnool&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mettur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nellore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sambalpur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sivasagar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tura&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Warangal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alappuzha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bangalore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bongaigaon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Daman Diu &amp; Nagar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Durgapur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haldia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamnagar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Khurja&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lucknow&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mumbai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nongstoin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Raipur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sangrur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sunder Nagar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ujjain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yamunanagar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Angul&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bharuch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chhindwara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gangtok&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hubli&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kalinga Nagar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Konark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Manali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nalagarh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Patancheru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Renusagar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shimoga&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thoothukudi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;VAPI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Amravati&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bathinda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dawki&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Firozabad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Honda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kadapa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kolhapur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mahad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nagpur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paonta Sahib&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ranebennur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Satna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thane&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Unnao&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allahabad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bareilly&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Byrnihat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Damtal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Durgapur (WB)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Haldwani&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamshedpur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kochi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ludhiana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mysore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ongole&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rajahmundry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanguem&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Surat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ulhasnagar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Assanora&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bhuj&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coimbatore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dharuhera&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gulbarga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jabalpur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Keonjhar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kozhikode&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mathura&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Navi Mumbai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pondicherry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saharanpur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sindri&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trivendrum&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vishakhapatnam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ahmedabad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Baddi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bijapur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Curchorem&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dimapur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gwalior&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jalgaon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Khammam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lakhimpur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moradabad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nizamabad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Puri&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SANAND&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solapur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turicorin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wayanad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Anpara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhubaneshwar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cochin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dhanbad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gorakhpur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Karimnagar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kottayam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Margao&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nanded&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pithampur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rudrapur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SILIGURI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trichy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vijayawada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alwar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baroda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Calcutta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DANKUNI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eluru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haridwar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jhansi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kohima&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lunglei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palakkad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rajkot&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sankrail&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Talcher&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ULUBERIA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ANKLESHWAR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bhilai&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chitradurga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dera Baba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ghaziabad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hubli-Dharwad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kalyani&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Korba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mandya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nalbari&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pathanamthitta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rishikesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sibsagar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tilamol&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vapi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ankleshwar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bhilai Nagar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chittoor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dera Bassi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gobindgarh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hyderabad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kanpur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kota&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mangalore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nalco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Patiala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Silchar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tinsukia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Varanasi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Asansol&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhubaneswar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Codli&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dharamshala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greater Mumbai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Itanagar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kashipur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kotttayam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Margherita&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nashik&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ponda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sagar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Silvassa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trivandrum&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Visakhapatnam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aurangabad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bicholim&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cuddalore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dharwad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guntur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jaipur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Khadoli&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kundaim&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Meerut&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Naya Nangal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pondichery&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singrauli&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tumkur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vizianagaram&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Amritsar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belgaum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chandrapur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dehradoon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gajraula&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hoshiarpur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kakinada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kolkata&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malappuram&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nahan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paradeep&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Raniganj&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shillong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thiruvananthapuram&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Usgao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Amlai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barrackpore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Champhai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Daranga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faridabad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hassan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jharia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kolar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nagaon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panaji&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ramagundam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saraikela Kharsawan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tarapur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Umsning&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aizawl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Badlapur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bilaspur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cuttack&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dombivli&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hailakandi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jalna&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Khanna&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MORBI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Noida&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rai Bareilly&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sangareddy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Suburban&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tuticorin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Singhbhum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Anklesvar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bhopal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chittorgarh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dewas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Golaghat&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Imphal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karaikal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kothur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mapusa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nalgonda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Patna&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rourkela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Silcher&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tirupati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vasco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ananthapur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Berhampur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chennai&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dehradun&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gajroula&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Howrah&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kala Amb&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kollam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MALDAH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Naharlagun&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Parwanoo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rayagada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shimla&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thissur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vadodara&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Akola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Balasore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bombay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Daman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Domlur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HALDIA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jammu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Khliehriat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lote&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mormugao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Noida, Ghaziabad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Raichur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sangli&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Srikakulam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Udaipur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yamuna Nagar&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1st5jwa0chdwf11dyco370748ksl].[avg:no2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1st5jwa0chdwf11dyco370748ksl].[sum:no2:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1st5jwa0chdwf11dyco370748ksl].[sum:so2:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data.csv' id='data.csv_A0BFF32DA57D422CAE8AEF0CAFBDF895'>
            <properties context=''>
              <relation connection='textscan.16pbews1pt471j11iz6lc1bvaeib' name='data.csv' table='[data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='stn_code' ordinal='0' />
                  <column datatype='date' date-parse-format='dd-MM-yy' name='sampling_date' ordinal='1' />
                  <column datatype='string' name='state' ordinal='2' />
                  <column datatype='string' name='location' ordinal='3' />
                  <column datatype='string' name='agency' ordinal='4' />
                  <column datatype='string' name='type' ordinal='5' />
                  <column datatype='real' name='so2' ordinal='6' />
                  <column datatype='real' name='no2' ordinal='7' />
                  <column datatype='integer' name='rspm' ordinal='8' />
                  <column datatype='integer' name='spm' ordinal='9' />
                  <column datatype='string' name='location_monitoring_station' ordinal='10' />
                  <column datatype='string' name='pm2_5' ordinal='11' />
                  <column datatype='date' name='date' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_C85A0CAF1CA24839B3198F7F5BD8DC70]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='City' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Areawise Avg Level of So2 and No2 In Air'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1st5jwa0chdwf11dyco370748ksl' />
          </datasources>
          <datasource-dependencies datasource='federated.1st5jwa0chdwf11dyco370748ksl'>
            <column datatype='string' name='[Type (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[type]' new-bin='true'>
                <bin default-name='false' value='&quot;Industrial Area&quot;'>
                  <value>&quot;Industrial Area&quot;</value>
                  <value>&quot;Industrial Areas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Sensitive Area&quot;'>
                  <value>&quot;Sensitive Area&quot;</value>
                  <value>&quot;Sensitive Areas&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[no2]' derivation='Avg' name='[avg:no2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[so2]' derivation='Avg' name='[avg:so2:qk]' pivot='key' type='quantitative' />
            <column caption='No2' datatype='real' name='[no2]' role='measure' type='quantitative' />
            <column caption='So2' datatype='real' name='[so2]' role='measure' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1st5jwa0chdwf11dyco370748ksl].[Type (group)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Type (group)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Type (group)]' member='&quot;NA&quot;' />
                <groupfilter function='member' level='[Type (group)]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1st5jwa0chdwf11dyco370748ksl].[Type (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1st5jwa0chdwf11dyco370748ksl].[Type (group)]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:no2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:no2:qk]' />
              <lod column='[federated.1st5jwa0chdwf11dyco370748ksl].[Type (group)]' />
              <text column='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:no2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]' />
              <lod column='[federated.1st5jwa0chdwf11dyco370748ksl].[Type (group)]' />
              <text column='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1st5jwa0chdwf11dyco370748ksl].[Type (group)]</rows>
        <cols>([federated.1st5jwa0chdwf11dyco370748ksl].[avg:no2:qk] + [federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk])</cols>
      </table>
      <simple-id uuid='{1B390AAF-5DF6-4C9F-B17D-D124E044B060}' />
    </worksheet>
    <worksheet name='Avg Rspm in Air in Top 20 Cities'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1st5jwa0chdwf11dyco370748ksl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1st5jwa0chdwf11dyco370748ksl'>
            <column-instance column='[rspm]' derivation='Avg' name='[avg:rspm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rspm]' derivation='CountD' name='[ctd:rspm:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Amlai&quot;' value='&quot;Shahdol&quot;' />
                <semantic-value key='&quot;Amona&quot;' value='&quot;Goa&quot;' />
                <semantic-value key='&quot;Ananthapur&quot;' value='&quot;Anantapur&quot;' />
                <semantic-value key='&quot;Anklesvar&quot;' value='&quot;Bharuch&quot;' />
                <semantic-value key='&quot;Anpara&quot;' value='&quot;Anuppur&quot;' />
                <semantic-value key='&quot;Assanora&quot;' value='&quot;Goa&quot;' />
                <semantic-value key='&quot;Aurangabad (MS)&quot;' value='&quot;Aurangabad&quot;' />
                <semantic-value key='&quot;Baroda&quot;' value='&quot;Vadodara&quot;' />
                <semantic-value key='&quot;Bathinda&quot;' value='&quot;Bathinda&quot;' />
                <semantic-value key='&quot;Belgaum&quot;' value='&quot;Belgaum&quot;' />
                <semantic-value key='&quot;Berhampur&quot;' value='&quot;Burhanpur&quot;' />
                <semantic-value key='&quot;Bharuch&quot;' value='&quot;Bharuch&quot;' />
                <semantic-value key='&quot;Bhilai&quot;' value='&quot;Durg&quot;' />
                <semantic-value key='&quot;Bhilai Nagar&quot;' value='&quot;Durg&quot;' />
                <semantic-value key='&quot;Bicholim&quot;' value='&quot;Goa&quot;' />
                <semantic-value key='&quot;Byrnihat&quot;' value='&quot;Ri-Bhoi&quot;' />
                <semantic-value key='&quot;Champhai&quot;' value='&quot;Chamoli&quot;' />
                <semantic-value key='&quot;Chandarpur&quot;' value='&quot;Chandrapur&quot;' />
                <semantic-value key='&quot;Codli&quot;' value='&quot;Goa&quot;' />
                <semantic-value key='&quot;Daman Diu &amp; Nagar&quot;' value='&quot;Daman&quot;' />
                <semantic-value key='&quot;Damtal&quot;' value='&quot;Indora&quot;' />
                <semantic-value key='&quot;DANKUNI&quot;' value='&quot;Kolkata&quot;' />
                <semantic-value key='&quot;Daranga&quot;' value='&quot;Mangaldoi&quot;' />
                <semantic-value key='&quot;Dawki&quot;' value='&quot;Mehndawal&quot;' />
                <semantic-value key='&quot;Dehradoon&quot;' value='&quot;Dehra Dun&quot;' />
                <semantic-value key='&quot;Dera Baba&quot;' value='&quot;Gurdaspur&quot;' />
                <semantic-value key='&quot;Dera Bassi&quot;' value='&quot;Chandigarh&quot;' />
                <semantic-value key='&quot;Dhanbad&quot;' value='&quot;Dhanbad&quot;' />
                <semantic-value key='&quot;Dharamshala&quot;' value='&quot;Dharmshala&quot;' />
                <semantic-value key='&quot;Domlur&quot;' value='&quot;Bengaluru&quot;' />
                <semantic-value key='&quot;Durgapur (WB)&quot;' value='&quot;Durgapur&quot;' />
                <semantic-value key='&quot;Gajroula&quot;' value='&quot;Amroha&quot;' />
                <semantic-value key='&quot;Gobindgarh&quot;' value='&quot;Gobichettipalayam&quot;' />
                <semantic-value key='&quot;Greater Mumbai&quot;' value='&quot;Mumbai&quot;' />
                <semantic-value key='&quot;Honda&quot;' value='&quot;Honavar&quot;' />
                <semantic-value key='&quot;Hyderabad&quot;' value='&quot;Hyderabad&quot;' />
                <semantic-value key='&quot;Jamshedpur&quot;' value='&quot;Jamshedpur&quot;' />
                <semantic-value key='&quot;Jharia&quot;' value='&quot;Dhanbad&quot;' />
                <semantic-value key='&quot;Kala Amb&quot;' value='&quot;Nahan&quot;' />
                <semantic-value key='&quot;Kalinga Nagar&quot;' value='&quot;Jaipur&quot;' />
                <semantic-value key='&quot;Karimnagar&quot;' value='&quot;Karimnagar&quot;' />
                <semantic-value key='&quot;Keonjhar&quot;' value='&quot;Kendujhar&quot;' />
                <semantic-value key='&quot;Khadoli&quot;' value='&quot;Nagar&quot;' />
                <semantic-value key='&quot;Khammam&quot;' value='&quot;Khammam&quot;' />
                <semantic-value key='&quot;Khliehriat&quot;' value='&quot;Khilchipur&quot;' />
                <semantic-value key='&quot;Kolasib&quot;' value='&quot;Kolar&quot;' />
                <semantic-value key='&quot;Korba&quot;' value='&quot;Korba&quot;' />
                <semantic-value key='&quot;Kothur&quot;' value='&quot;Hyderabad&quot;' />
                <semantic-value key='&quot;Kotttayam&quot;' value='&quot;Kottayam&quot;' />
                <semantic-value key='&quot;Kundaim&quot;' value='&quot;Ponda&quot;' />
                <semantic-value key='&quot;Lote&quot;' value='&quot;Khed&quot;' />
                <semantic-value key='&quot;MALDAH&quot;' value='&quot;Malda&quot;' />
                <semantic-value key='&quot;Manali&quot;' value='&quot;Kullu&quot;' />
                <semantic-value key='&quot;Mapusa&quot;' value='&quot;Goa&quot;' />
                <semantic-value key='&quot;Nalco&quot;' value='&quot;Koraput&quot;' />
                <semantic-value key='&quot;Nalgonda&quot;' value='&quot;Nalgonda&quot;' />
                <semantic-value key='&quot;Naya Nangal&quot;' value='&quot;Rupnagar&quot;' />
                <semantic-value key='&quot;Nizamabad&quot;' value='&quot;Nizamabad&quot;' />
                <semantic-value key='&quot;Paradeep&quot;' value='&quot;Paradip&quot;' />
                <semantic-value key='&quot;Parwanoo&quot;' value='&quot;Solan&quot;' />
                <semantic-value key='&quot;Patancheru&quot;' value='&quot;Hyderabad&quot;' />
                <semantic-value key='&quot;Pondicherry&quot;' value='&quot;Puducherry&quot;' />
                <semantic-value key='&quot;Rai Bareilly&quot;' value='&quot;Rae Bareli&quot;' />
                <semantic-value key='&quot;Raipur&quot;' value='&quot;Raipur&quot;' />
                <semantic-value key='&quot;Ramagundam&quot;' value='&quot;Peddapalli&quot;' />
                <semantic-value key='&quot;Ranebennur&quot;' value='&quot;Haveri&quot;' />
                <semantic-value key='&quot;Rayagada&quot;' value='&quot;Rayadrug&quot;' />
                <semantic-value key='&quot;Renusagar&quot;' value='&quot;Renuka&quot;' />
                <semantic-value key='&quot;Rudrapur&quot;' value='&quot;Rudarpur&quot;' />
                <semantic-value key='&quot;Sangareddy&quot;' value='&quot;Hyderabad&quot;' />
                <semantic-value key='&quot;Saraikela Kharsawan&quot;' value='&quot;Saraikela&quot;' />
                <semantic-value key='&quot;Sarigam&quot;' value='&quot;Srisailam&quot;' />
                <semantic-value key='&quot;Silcher&quot;' value='&quot;Silchar&quot;' />
                <semantic-value key='&quot;Sindri&quot;' value='&quot;Sindgi&quot;' />
                <semantic-value key='&quot;Sivasagar&quot;' value='&quot;Sivaganga&quot;' />
                <semantic-value key='&quot;South Suburban&quot;' value='&quot;Lower subansiri&quot;' />
                <semantic-value key='&quot;Sunder Nagar&quot;' value='&quot;Sundarnagar&quot;' />
                <semantic-value key='&quot;Tarapur&quot;' value='&quot;Palghar&quot;' />
                <semantic-value key='&quot;Thissur&quot;' value='&quot;Thiruvarur&quot;' />
                <semantic-value key='&quot;Thoothukudi&quot;' value='&quot;Thoubal&quot;' />
                <semantic-value key='&quot;Tilamol&quot;' value='&quot;Goa&quot;' />
                <semantic-value key='&quot;Trichy&quot;' value='&quot;Tiruchchirappalli&quot;' />
                <semantic-value key='&quot;Trivendrum&quot;' value='&quot;Trivandrum&quot;' />
                <semantic-value key='&quot;Tumkur&quot;' value='&quot;Tumkur&quot;' />
                <semantic-value key='&quot;Tura&quot;' value='&quot;Tura&quot;' />
                <semantic-value key='&quot;Turicorin&quot;' value='&quot;Tuticorin&quot;' />
                <semantic-value key='&quot;Tuticorin&quot;' value='&quot;Tuticorin&quot;' />
                <semantic-value key='&quot;Udaipur&quot;' value='&quot;Udaipur&quot;' />
                <semantic-value key='&quot;Ujjain&quot;' value='&quot;Ujjain&quot;' />
                <semantic-value key='&quot;Ulhasnagar&quot;' value='&quot;Ulhasnagar&quot;' />
                <semantic-value key='&quot;ULUBERIA&quot;' value='&quot;Howrah&quot;' />
                <semantic-value key='&quot;Umsning&quot;' value='&quot;Ri-Bhoi&quot;' />
                <semantic-value key='&quot;Una&quot;' value='&quot;Una&quot;' />
                <semantic-value key='&quot;Unnao&quot;' value='&quot;Unnao&quot;' />
                <semantic-value key='&quot;Usgao&quot;' value='&quot;Goa&quot;' />
                <semantic-value key='&quot;Vadodara&quot;' value='&quot;Vadodara&quot;' />
                <semantic-value key='&quot;Vapi&quot;' value='&quot;Valsad&quot;' />
                <semantic-value key='&quot;VAPI&quot;' value='&quot;Valsad&quot;' />
                <semantic-value key='&quot;Varanasi&quot;' value='&quot;Varanasi&quot;' />
                <semantic-value key='&quot;Vasco&quot;' value='&quot;Panjim&quot;' />
                <semantic-value key='&quot;Vijayawada&quot;' value='&quot;Vijayawada&quot;' />
                <semantic-value key='&quot;Visakhapatnam&quot;' value='&quot;Vishakhapatnam&quot;' />
                <semantic-value key='&quot;Vishakhapatnam&quot;' value='&quot;Vishakhapatnam&quot;' />
                <semantic-value key='&quot;Vizianagaram&quot;' value='&quot;Vizianagaram&quot;' />
                <semantic-value key='&quot;Warangal&quot;' value='&quot;Warangal&quot;' />
                <semantic-value key='&quot;Wayanad&quot;' value='&quot;Kalpetta&quot;' />
                <semantic-value key='&quot;West Singhbhum&quot;' value='&quot;Chaibasa&quot;' />
                <semantic-value key='&quot;Yamuna Nagar&quot;' value='&quot;Yamunanagar&quot;' />
                <semantic-value key='&quot;Yamunanagar&quot;' value='&quot;Yamunanagar&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Rspm' datatype='integer' name='[rspm]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Andhra Pradesh&quot;' value='&quot;Andhra Pradesh&quot;' />
                <semantic-value key='&quot;Arunachal Pradesh&quot;' value='&quot;Arunachal Pradesh&quot;' />
                <semantic-value key='&quot;Assam&quot;' value='&quot;Assam&quot;' />
                <semantic-value key='&quot;Bihar&quot;' value='&quot;Bihar&quot;' />
                <semantic-value key='&quot;Chandigarh&quot;' value='&quot;Chandigarh&quot;' />
                <semantic-value key='&quot;Chhattisgarh&quot;' value='&quot;Chhattisgarh&quot;' />
                <semantic-value key='&quot;Dadra &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli and Daman and Diu&quot;' />
                <semantic-value key='&quot;Daman &amp; Diu&quot;' value='&quot;Dadra and Nagar Haveli and Daman and Diu&quot;' />
                <semantic-value key='&quot;Delhi&quot;' value='&quot;Delhi&quot;' />
                <semantic-value key='&quot;Goa&quot;' value='&quot;Goa&quot;' />
                <semantic-value key='&quot;Gujarat&quot;' value='&quot;Gujarat&quot;' />
                <semantic-value key='&quot;Haryana&quot;' value='&quot;Haryana&quot;' />
                <semantic-value key='&quot;Himachal Pradesh&quot;' value='&quot;Himachal Pradesh&quot;' />
                <semantic-value key='&quot;Jammu &amp; Kashmir&quot;' value='&quot;Jammu and Kashmir&quot;' />
                <semantic-value key='&quot;Jharkhand&quot;' value='&quot;Jharkhand&quot;' />
                <semantic-value key='&quot;Karnataka&quot;' value='&quot;Karnataka&quot;' />
                <semantic-value key='&quot;Kerala&quot;' value='&quot;Kerala&quot;' />
                <semantic-value key='&quot;Madhya Pradesh&quot;' value='&quot;Madhya Pradesh&quot;' />
                <semantic-value key='&quot;Maharashtra&quot;' value='&quot;Maharashtra&quot;' />
                <semantic-value key='&quot;Manipur&quot;' value='&quot;Manipur&quot;' />
                <semantic-value key='&quot;Meghalaya&quot;' value='&quot;Meghalaya&quot;' />
                <semantic-value key='&quot;Mizoram&quot;' value='&quot;Mizoram&quot;' />
                <semantic-value key='&quot;Nagaland&quot;' value='&quot;Nagaland&quot;' />
                <semantic-value key='&quot;Odisha&quot;' value='&quot;Orissa&quot;' />
                <semantic-value key='&quot;Puducherry&quot;' value='&quot;Puducherry&quot;' />
                <semantic-value key='&quot;Punjab&quot;' value='&quot;Punjab&quot;' />
                <semantic-value key='&quot;Rajasthan&quot;' value='&quot;Rajasthan&quot;' />
                <semantic-value key='&quot;Sikkim&quot;' value='&quot;Sikkim&quot;' />
                <semantic-value key='&quot;Tamil Nadu&quot;' value='&quot;Tamil Nadu&quot;' />
                <semantic-value key='&quot;Telangana&quot;' value='&quot;Telangana&quot;' />
                <semantic-value key='&quot;Uttar Pradesh&quot;' value='&quot;Uttar Pradesh&quot;' />
                <semantic-value key='&quot;Uttarakhand&quot;' value='&quot;Uttarakhand&quot;' />
                <semantic-value key='&quot;Uttaranchal&quot;' value='&quot;Uttarakhand&quot;' />
                <semantic-value key='&quot;West Bengal&quot;' value='&quot;West Bengal&quot;' />
              </semantic-values>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:rspm:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>249.7969040247678</max>
          </filter>
          <filter class='categorical' column='[federated.1st5jwa0chdwf11dyco370748ksl].[none:location:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([rspm])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:location:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Bombay&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Chandarpur&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Chittorgarh&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Cochin&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Daman Diu &amp; Nagar&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Dehradoon&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Dharuhera&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Gajroula&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Kotttayam&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Madras&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;NA&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Nalco&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Noida, Ghaziabad&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Pondichery&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Trivendrum&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Turicorin&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Tuticorin&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='&quot;Vishakhapatnam&quot;' />
                    <groupfilter function='member' level='[none:location:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1st5jwa0chdwf11dyco370748ksl].[avg:rspm:qk]</column>
            <column>[federated.1st5jwa0chdwf11dyco370748ksl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='223' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='16' />
            <format attr='width' field='[federated.1st5jwa0chdwf11dyco370748ksl].[none:location:nk]' value='148' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1st5jwa0chdwf11dyco370748ksl].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1st5jwa0chdwf11dyco370748ksl].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1st5jwa0chdwf11dyco370748ksl].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1st5jwa0chdwf11dyco370748ksl].[none:location:nk]' />
              <size column='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:rspm:qk]' />
              <text column='[federated.1st5jwa0chdwf11dyco370748ksl].[ctd:rspm:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1st5jwa0chdwf11dyco370748ksl].[none:state:nk] / [federated.1st5jwa0chdwf11dyco370748ksl].[none:location:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{0C7FB451-7377-4C77-982D-4C90A49D4A1D}' />
    </worksheet>
    <worksheet name='Avg SO2 And NO2 Level In Air Over Years'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Avg SO2 And NO2 Level In Air Over Years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1st5jwa0chdwf11dyco370748ksl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1st5jwa0chdwf11dyco370748ksl'>
            <column-instance column='[no2]' derivation='Avg' name='[avg:no2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[so2]' derivation='Avg' name='[avg:so2:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='City' datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Amlai&quot;' value='&quot;Shahdol&quot;' />
                <semantic-value key='&quot;Amona&quot;' value='&quot;Goa&quot;' />
                <semantic-value key='&quot;Ananthapur&quot;' value='&quot;Anantapur&quot;' />
                <semantic-value key='&quot;Anklesvar&quot;' value='&quot;Bharuch&quot;' />
                <semantic-value key='&quot;Anpara&quot;' value='&quot;Anuppur&quot;' />
                <semantic-value key='&quot;Assanora&quot;' value='&quot;Goa&quot;' />
                <semantic-value key='&quot;Aurangabad (MS)&quot;' value='&quot;Aurangabad&quot;' />
                <semantic-value key='&quot;Baroda&quot;' value='&quot;Vadodara&quot;' />
                <semantic-value key='&quot;Bathinda&quot;' value='&quot;Bathinda&quot;' />
                <semantic-value key='&quot;Belgaum&quot;' value='&quot;Belgaum&quot;' />
                <semantic-value key='&quot;Berhampur&quot;' value='&quot;Burhanpur&quot;' />
                <semantic-value key='&quot;Bharuch&quot;' value='&quot;Bharuch&quot;' />
                <semantic-value key='&quot;Bhilai&quot;' value='&quot;Durg&quot;' />
                <semantic-value key='&quot;Bhilai Nagar&quot;' value='&quot;Durg&quot;' />
                <semantic-value key='&quot;Bicholim&quot;' value='&quot;Goa&quot;' />
                <semantic-value key='&quot;Byrnihat&quot;' value='&quot;Ri-Bhoi&quot;' />
                <semantic-value key='&quot;Champhai&quot;' value='&quot;Chamoli&quot;' />
                <semantic-value key='&quot;Chandarpur&quot;' value='&quot;Chandrapur&quot;' />
                <semantic-value key='&quot;Codli&quot;' value='&quot;Goa&quot;' />
                <semantic-value key='&quot;Daman Diu &amp; Nagar&quot;' value='&quot;Daman&quot;' />
                <semantic-value key='&quot;Damtal&quot;' value='&quot;Indora&quot;' />
                <semantic-value key='&quot;DANKUNI&quot;' value='&quot;Kolkata&quot;' />
                <semantic-value key='&quot;Daranga&quot;' value='&quot;Mangaldoi&quot;' />
                <semantic-value key='&quot;Dawki&quot;' value='&quot;Mehndawal&quot;' />
                <semantic-value key='&quot;Dehradoon&quot;' value='&quot;Dehra Dun&quot;' />
                <semantic-value key='&quot;Dera Baba&quot;' value='&quot;Gurdaspur&quot;' />
                <semantic-value key='&quot;Dera Bassi&quot;' value='&quot;Chandigarh&quot;' />
                <semantic-value key='&quot;Dhanbad&quot;' value='&quot;Dhanbad&quot;' />
                <semantic-value key='&quot;Dharamshala&quot;' value='&quot;Dharmshala&quot;' />
                <semantic-value key='&quot;Domlur&quot;' value='&quot;Bengaluru&quot;' />
                <semantic-value key='&quot;Durgapur (WB)&quot;' value='&quot;Durgapur&quot;' />
                <semantic-value key='&quot;Gajroula&quot;' value='&quot;Amroha&quot;' />
                <semantic-value key='&quot;Gobindgarh&quot;' value='&quot;Gobichettipalayam&quot;' />
                <semantic-value key='&quot;Greater Mumbai&quot;' value='&quot;Mumbai&quot;' />
                <semantic-value key='&quot;Honda&quot;' value='&quot;Honavar&quot;' />
                <semantic-value key='&quot;Hyderabad&quot;' value='&quot;Hyderabad&quot;' />
                <semantic-value key='&quot;Jamshedpur&quot;' value='&quot;Jamshedpur&quot;' />
                <semantic-value key='&quot;Jharia&quot;' value='&quot;Dhanbad&quot;' />
                <semantic-value key='&quot;Kala Amb&quot;' value='&quot;Nahan&quot;' />
                <semantic-value key='&quot;Kalinga Nagar&quot;' value='&quot;Jaipur&quot;' />
                <semantic-value key='&quot;Karimnagar&quot;' value='&quot;Karimnagar&quot;' />
                <semantic-value key='&quot;Keonjhar&quot;' value='&quot;Kendujhar&quot;' />
                <semantic-value key='&quot;Khadoli&quot;' value='&quot;Nagar&quot;' />
                <semantic-value key='&quot;Khammam&quot;' value='&quot;Khammam&quot;' />
                <semantic-value key='&quot;Khliehriat&quot;' value='&quot;Khilchipur&quot;' />
                <semantic-value key='&quot;Kolasib&quot;' value='&quot;Kolar&quot;' />
                <semantic-value key='&quot;Korba&quot;' value='&quot;Korba&quot;' />
                <semantic-value key='&quot;Kothur&quot;' value='&quot;Hyderabad&quot;' />
                <semantic-value key='&quot;Kotttayam&quot;' value='&quot;Kottayam&quot;' />
                <semantic-value key='&quot;Kundaim&quot;' value='&quot;Ponda&quot;' />
                <semantic-value key='&quot;Lote&quot;' value='&quot;Khed&quot;' />
                <semantic-value key='&quot;MALDAH&quot;' value='&quot;Malda&quot;' />
                <semantic-value key='&quot;Manali&quot;' value='&quot;Kullu&quot;' />
                <semantic-value key='&quot;Mapusa&quot;' value='&quot;Goa&quot;' />
                <semantic-value key='&quot;Nalco&quot;' value='&quot;Koraput&quot;' />
                <semantic-value key='&quot;Nalgonda&quot;' value='&quot;Nalgonda&quot;' />
                <semantic-value key='&quot;Naya Nangal&quot;' value='&quot;Rupnagar&quot;' />
                <semantic-value key='&quot;Nizamabad&quot;' value='&quot;Nizamabad&quot;' />
                <semantic-value key='&quot;Paradeep&quot;' value='&quot;Paradip&quot;' />
                <semantic-value key='&quot;Parwanoo&quot;' value='&quot;Solan&quot;' />
                <semantic-value key='&quot;Patancheru&quot;' value='&quot;Hyderabad&quot;' />
                <semantic-value key='&quot;Pondicherry&quot;' value='&quot;Puducherry&quot;' />
                <semantic-value key='&quot;Rai Bareilly&quot;' value='&quot;Rae Bareli&quot;' />
                <semantic-value key='&quot;Raipur&quot;' value='&quot;Raipur&quot;' />
                <semantic-value key='&quot;Ramagundam&quot;' value='&quot;Peddapalli&quot;' />
                <semantic-value key='&quot;Ranebennur&quot;' value='&quot;Haveri&quot;' />
                <semantic-value key='&quot;Rayagada&quot;' value='&quot;Rayadrug&quot;' />
                <semantic-value key='&quot;Renusagar&quot;' value='&quot;Renuka&quot;' />
                <semantic-value key='&quot;Rudrapur&quot;' value='&quot;Rudarpur&quot;' />
                <semantic-value key='&quot;Sangareddy&quot;' value='&quot;Hyderabad&quot;' />
                <semantic-value key='&quot;Saraikela Kharsawan&quot;' value='&quot;Saraikela&quot;' />
                <semantic-value key='&quot;Sarigam&quot;' value='&quot;Srisailam&quot;' />
                <semantic-value key='&quot;Silcher&quot;' value='&quot;Silchar&quot;' />
                <semantic-value key='&quot;Sindri&quot;' value='&quot;Sindgi&quot;' />
                <semantic-value key='&quot;Sivasagar&quot;' value='&quot;Sivaganga&quot;' />
                <semantic-value key='&quot;South Suburban&quot;' value='&quot;Lower subansiri&quot;' />
                <semantic-value key='&quot;Sunder Nagar&quot;' value='&quot;Sundarnagar&quot;' />
                <semantic-value key='&quot;Tarapur&quot;' value='&quot;Palghar&quot;' />
                <semantic-value key='&quot;Thissur&quot;' value='&quot;Thiruvarur&quot;' />
                <semantic-value key='&quot;Thoothukudi&quot;' value='&quot;Thoubal&quot;' />
                <semantic-value key='&quot;Tilamol&quot;' value='&quot;Goa&quot;' />
                <semantic-value key='&quot;Trichy&quot;' value='&quot;Tiruchchirappalli&quot;' />
                <semantic-value key='&quot;Trivendrum&quot;' value='&quot;Trivandrum&quot;' />
                <semantic-value key='&quot;Tumkur&quot;' value='&quot;Tumkur&quot;' />
                <semantic-value key='&quot;Tura&quot;' value='&quot;Tura&quot;' />
                <semantic-value key='&quot;Turicorin&quot;' value='&quot;Tuticorin&quot;' />
                <semantic-value key='&quot;Tuticorin&quot;' value='&quot;Tuticorin&quot;' />
                <semantic-value key='&quot;Udaipur&quot;' value='&quot;Udaipur&quot;' />
                <semantic-value key='&quot;Ujjain&quot;' value='&quot;Ujjain&quot;' />
                <semantic-value key='&quot;Ulhasnagar&quot;' value='&quot;Ulhasnagar&quot;' />
                <semantic-value key='&quot;ULUBERIA&quot;' value='&quot;Howrah&quot;' />
                <semantic-value key='&quot;Umsning&quot;' value='&quot;Ri-Bhoi&quot;' />
                <semantic-value key='&quot;Una&quot;' value='&quot;Una&quot;' />
                <semantic-value key='&quot;Unnao&quot;' value='&quot;Unnao&quot;' />
                <semantic-value key='&quot;Usgao&quot;' value='&quot;Goa&quot;' />
                <semantic-value key='&quot;Vadodara&quot;' value='&quot;Vadodara&quot;' />
                <semantic-value key='&quot;Vapi&quot;' value='&quot;Valsad&quot;' />
                <semantic-value key='&quot;VAPI&quot;' value='&quot;Valsad&quot;' />
                <semantic-value key='&quot;Varanasi&quot;' value='&quot;Varanasi&quot;' />
                <semantic-value key='&quot;Vasco&quot;' value='&quot;Panjim&quot;' />
                <semantic-value key='&quot;Vijayawada&quot;' value='&quot;Vijayawada&quot;' />
                <semantic-value key='&quot;Visakhapatnam&quot;' value='&quot;Vishakhapatnam&quot;' />
                <semantic-value key='&quot;Vishakhapatnam&quot;' value='&quot;Vishakhapatnam&quot;' />
                <semantic-value key='&quot;Vizianagaram&quot;' value='&quot;Vizianagaram&quot;' />
                <semantic-value key='&quot;Warangal&quot;' value='&quot;Warangal&quot;' />
                <semantic-value key='&quot;Wayanad&quot;' value='&quot;Kalpetta&quot;' />
                <semantic-value key='&quot;West Singhbhum&quot;' value='&quot;Chaibasa&quot;' />
                <semantic-value key='&quot;Yamuna Nagar&quot;' value='&quot;Yamunanagar&quot;' />
                <semantic-value key='&quot;Yamunanagar&quot;' value='&quot;Yamunanagar&quot;' />
              </semantic-values>
            </column>
            <column caption='No2' datatype='real' name='[no2]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='So2' datatype='real' name='[so2]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Andhra Pradesh&quot;' value='&quot;Andhra Pradesh&quot;' />
                <semantic-value key='&quot;Arunachal Pradesh&quot;' value='&quot;Arunachal Pradesh&quot;' />
                <semantic-value key='&quot;Assam&quot;' value='&quot;Assam&quot;' />
                <semantic-value key='&quot;Bihar&quot;' value='&quot;Bihar&quot;' />
                <semantic-value key='&quot;Chandigarh&quot;' value='&quot;Chandigarh&quot;' />
                <semantic-value key='&quot;Chhattisgarh&quot;' value='&quot;Chhattisgarh&quot;' />
                <semantic-value key='&quot;Dadra &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli and Daman and Diu&quot;' />
                <semantic-value key='&quot;Daman &amp; Diu&quot;' value='&quot;Dadra and Nagar Haveli and Daman and Diu&quot;' />
                <semantic-value key='&quot;Delhi&quot;' value='&quot;Delhi&quot;' />
                <semantic-value key='&quot;Goa&quot;' value='&quot;Goa&quot;' />
                <semantic-value key='&quot;Gujarat&quot;' value='&quot;Gujarat&quot;' />
                <semantic-value key='&quot;Haryana&quot;' value='&quot;Haryana&quot;' />
                <semantic-value key='&quot;Himachal Pradesh&quot;' value='&quot;Himachal Pradesh&quot;' />
                <semantic-value key='&quot;Jammu &amp; Kashmir&quot;' value='&quot;Jammu and Kashmir&quot;' />
                <semantic-value key='&quot;Jharkhand&quot;' value='&quot;Jharkhand&quot;' />
                <semantic-value key='&quot;Karnataka&quot;' value='&quot;Karnataka&quot;' />
                <semantic-value key='&quot;Kerala&quot;' value='&quot;Kerala&quot;' />
                <semantic-value key='&quot;Madhya Pradesh&quot;' value='&quot;Madhya Pradesh&quot;' />
                <semantic-value key='&quot;Maharashtra&quot;' value='&quot;Maharashtra&quot;' />
                <semantic-value key='&quot;Manipur&quot;' value='&quot;Manipur&quot;' />
                <semantic-value key='&quot;Meghalaya&quot;' value='&quot;Meghalaya&quot;' />
                <semantic-value key='&quot;Mizoram&quot;' value='&quot;Mizoram&quot;' />
                <semantic-value key='&quot;Nagaland&quot;' value='&quot;Nagaland&quot;' />
                <semantic-value key='&quot;Odisha&quot;' value='&quot;Orissa&quot;' />
                <semantic-value key='&quot;Puducherry&quot;' value='&quot;Puducherry&quot;' />
                <semantic-value key='&quot;Punjab&quot;' value='&quot;Punjab&quot;' />
                <semantic-value key='&quot;Rajasthan&quot;' value='&quot;Rajasthan&quot;' />
                <semantic-value key='&quot;Sikkim&quot;' value='&quot;Sikkim&quot;' />
                <semantic-value key='&quot;Tamil Nadu&quot;' value='&quot;Tamil Nadu&quot;' />
                <semantic-value key='&quot;Telangana&quot;' value='&quot;Telangana&quot;' />
                <semantic-value key='&quot;Uttar Pradesh&quot;' value='&quot;Uttar Pradesh&quot;' />
                <semantic-value key='&quot;Uttarakhand&quot;' value='&quot;Uttarakhand&quot;' />
                <semantic-value key='&quot;Uttaranchal&quot;' value='&quot;Uttarakhand&quot;' />
                <semantic-value key='&quot;West Bengal&quot;' value='&quot;West Bengal&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1st5jwa0chdwf11dyco370748ksl].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1st5jwa0chdwf11dyco370748ksl].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1st5jwa0chdwf11dyco370748ksl].[yr:date:ok]'>
            <groupfilter from='1987' function='range' level='[yr:date:ok]' to='2015' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1st5jwa0chdwf11dyco370748ksl].[Latitude (generated)]</column>
            <column>[federated.1st5jwa0chdwf11dyco370748ksl].[Longitude (generated)]</column>
            <column>[federated.1st5jwa0chdwf11dyco370748ksl].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1st5jwa0chdwf11dyco370748ksl].[Longitude (generated)]' field-type='quantitative' max='50232331.82522507' min='50198432.186085992' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1st5jwa0chdwf11dyco370748ksl].[Latitude (generated)]' field-type='quantitative' max='1469302.1135376219' min='1435672.8072547449' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:no2:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e6cfcf</color>
                <color>#dbafaf</color>
                <color>#d09192</color>
                <color>#c57677</color>
                <color>#ba5d5e</color>
                <color>#af4547</color>
                <color>#a43132</color>
                <color>#991e20</color>
                <color>#8e0e10</color>
                <color>#830002</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1st5jwa0chdwf11dyco370748ksl].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1st5jwa0chdwf11dyco370748ksl].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1st5jwa0chdwf11dyco370748ksl].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1st5jwa0chdwf11dyco370748ksl].[none:state:nk]' />
              <color column='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]' />
              <size column='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:no2:qk]' />
              <lod column='[federated.1st5jwa0chdwf11dyco370748ksl].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1st5jwa0chdwf11dyco370748ksl].[Latitude (generated)]</rows>
        <cols>[federated.1st5jwa0chdwf11dyco370748ksl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9A0ECB91-4C4A-4FDA-B28C-DFF91E3F8F74}' />
    </worksheet>
    <worksheet name='Avg Spm Level In Air'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1st5jwa0chdwf11dyco370748ksl' />
          </datasources>
          <datasource-dependencies datasource='federated.1st5jwa0chdwf11dyco370748ksl'>
            <column-instance column='[spm]' derivation='Avg' name='[avg:spm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Spm' datatype='integer' name='[spm]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Andhra Pradesh&quot;' value='&quot;Andhra Pradesh&quot;' />
                <semantic-value key='&quot;Arunachal Pradesh&quot;' value='&quot;Arunachal Pradesh&quot;' />
                <semantic-value key='&quot;Assam&quot;' value='&quot;Assam&quot;' />
                <semantic-value key='&quot;Bihar&quot;' value='&quot;Bihar&quot;' />
                <semantic-value key='&quot;Chandigarh&quot;' value='&quot;Chandigarh&quot;' />
                <semantic-value key='&quot;Chhattisgarh&quot;' value='&quot;Chhattisgarh&quot;' />
                <semantic-value key='&quot;Dadra &amp; Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli and Daman and Diu&quot;' />
                <semantic-value key='&quot;Daman &amp; Diu&quot;' value='&quot;Dadra and Nagar Haveli and Daman and Diu&quot;' />
                <semantic-value key='&quot;Delhi&quot;' value='&quot;Delhi&quot;' />
                <semantic-value key='&quot;Goa&quot;' value='&quot;Goa&quot;' />
                <semantic-value key='&quot;Gujarat&quot;' value='&quot;Gujarat&quot;' />
                <semantic-value key='&quot;Haryana&quot;' value='&quot;Haryana&quot;' />
                <semantic-value key='&quot;Himachal Pradesh&quot;' value='&quot;Himachal Pradesh&quot;' />
                <semantic-value key='&quot;Jammu &amp; Kashmir&quot;' value='&quot;Jammu and Kashmir&quot;' />
                <semantic-value key='&quot;Jharkhand&quot;' value='&quot;Jharkhand&quot;' />
                <semantic-value key='&quot;Karnataka&quot;' value='&quot;Karnataka&quot;' />
                <semantic-value key='&quot;Kerala&quot;' value='&quot;Kerala&quot;' />
                <semantic-value key='&quot;Madhya Pradesh&quot;' value='&quot;Madhya Pradesh&quot;' />
                <semantic-value key='&quot;Maharashtra&quot;' value='&quot;Maharashtra&quot;' />
                <semantic-value key='&quot;Manipur&quot;' value='&quot;Manipur&quot;' />
                <semantic-value key='&quot;Meghalaya&quot;' value='&quot;Meghalaya&quot;' />
                <semantic-value key='&quot;Mizoram&quot;' value='&quot;Mizoram&quot;' />
                <semantic-value key='&quot;Nagaland&quot;' value='&quot;Nagaland&quot;' />
                <semantic-value key='&quot;Odisha&quot;' value='&quot;Orissa&quot;' />
                <semantic-value key='&quot;Puducherry&quot;' value='&quot;Puducherry&quot;' />
                <semantic-value key='&quot;Punjab&quot;' value='&quot;Punjab&quot;' />
                <semantic-value key='&quot;Rajasthan&quot;' value='&quot;Rajasthan&quot;' />
                <semantic-value key='&quot;Sikkim&quot;' value='&quot;Sikkim&quot;' />
                <semantic-value key='&quot;Tamil Nadu&quot;' value='&quot;Tamil Nadu&quot;' />
                <semantic-value key='&quot;Telangana&quot;' value='&quot;Telangana&quot;' />
                <semantic-value key='&quot;Uttar Pradesh&quot;' value='&quot;Uttar Pradesh&quot;' />
                <semantic-value key='&quot;Uttarakhand&quot;' value='&quot;Uttarakhand&quot;' />
                <semantic-value key='&quot;Uttaranchal&quot;' value='&quot;Uttarakhand&quot;' />
                <semantic-value key='&quot;West Bengal&quot;' value='&quot;West Bengal&quot;' />
              </semantic-values>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:spm:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1st5jwa0chdwf11dyco370748ksl].[avg:spm:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:spm:qk]' />
              <color column='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:spm:qk]' />
              <text column='[federated.1st5jwa0chdwf11dyco370748ksl].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{04C75C35-1B5B-469B-98C5-4B0F6FD577EE}' />
    </worksheet>
    <worksheet name='Yearly Avg So2 and No2 In Air Between 1987-2000'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1st5jwa0chdwf11dyco370748ksl' />
          </datasources>
          <datasource-dependencies datasource='federated.1st5jwa0chdwf11dyco370748ksl'>
            <column-instance column='[no2]' derivation='Avg' name='[avg:no2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[so2]' derivation='Avg' name='[avg:so2:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='No2' datatype='real' name='[no2]' role='measure' type='quantitative' />
            <column caption='So2' datatype='real' name='[so2]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1st5jwa0chdwf11dyco370748ksl].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='1987' />
              <groupfilter function='member' level='[yr:date:ok]' member='1988' />
              <groupfilter function='member' level='[yr:date:ok]' member='1989' />
              <groupfilter function='member' level='[yr:date:ok]' member='1990' />
              <groupfilter function='member' level='[yr:date:ok]' member='1991' />
              <groupfilter function='member' level='[yr:date:ok]' member='1992' />
              <groupfilter function='member' level='[yr:date:ok]' member='1993' />
              <groupfilter function='member' level='[yr:date:ok]' member='1994' />
              <groupfilter function='member' level='[yr:date:ok]' member='1995' />
              <groupfilter function='member' level='[yr:date:ok]' member='1996' />
              <groupfilter function='member' level='[yr:date:ok]' member='1997' />
              <groupfilter function='member' level='[yr:date:ok]' member='1998' />
              <groupfilter function='member' level='[yr:date:ok]' member='1999' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1st5jwa0chdwf11dyco370748ksl].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1st5jwa0chdwf11dyco370748ksl].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:no2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1st5jwa0chdwf11dyco370748ksl].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1st5jwa0chdwf11dyco370748ksl].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1st5jwa0chdwf11dyco370748ksl].[avg:no2:qk] + [federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk])</rows>
        <cols>[federated.1st5jwa0chdwf11dyco370748ksl].[tyr:date:qk]</cols>
      </table>
      <simple-id uuid='{4F410C61-9584-4B8D-82AE-9A2796F09B08}' />
    </worksheet>
    <worksheet name='Yearly Avg So2 and No2 In Air Between 2000-2015'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1st5jwa0chdwf11dyco370748ksl' />
          </datasources>
          <datasource-dependencies datasource='federated.1st5jwa0chdwf11dyco370748ksl'>
            <column-instance column='[no2]' derivation='Avg' name='[avg:no2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[so2]' derivation='Avg' name='[avg:so2:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='No2' datatype='real' name='[no2]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='So2' datatype='real' name='[so2]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1st5jwa0chdwf11dyco370748ksl].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]&quot;</bucket>
              <bucket>&quot;[federated.1st5jwa0chdwf11dyco370748ksl].[avg:no2:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1st5jwa0chdwf11dyco370748ksl].[none:date:qk]' included-values='in-range'>
            <min>#2001-01-14#</min>
            <max>#2015-12-31#</max>
          </filter>
          <slices>
            <column>[federated.1st5jwa0chdwf11dyco370748ksl].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1st5jwa0chdwf11dyco370748ksl].[tyr:date:qk]' scope='cols' value='Date' />
            <encoding attr='space' class='0' field='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1st5jwa0chdwf11dyco370748ksl].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:no2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1st5jwa0chdwf11dyco370748ksl].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1st5jwa0chdwf11dyco370748ksl].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1st5jwa0chdwf11dyco370748ksl].[avg:no2:qk] + [federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk])</rows>
        <cols>[federated.1st5jwa0chdwf11dyco370748ksl].[tyr:date:qk]</cols>
      </table>
      <simple-id uuid='{5EF24574-2603-43EA-B6A8-C1768B673568}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Comparison Before And after '>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Yearly Avg So2 and No2 In Air Between 1987-2000' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Yearly Avg So2 and No2 In Air Between 2000-2015' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='9000' id='8' name='Yearly Avg So2 and No2 In Air Between 1987-2000' pane-specification-id='1' param='[federated.1st5jwa0chdwf11dyco370748ksl].[:Measure Names]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='14' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Yearly Avg So2 and No2 In Air Between 1987-2000' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9000' id='8' name='Yearly Avg So2 and No2 In Air Between 1987-2000' pane-specification-id='1' param='[federated.1st5jwa0chdwf11dyco370748ksl].[:Measure Names]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Yearly Avg So2 and No2 In Air Between 2000-2015' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7F6E0129-2A46-4242-9F0A-80FC38653385}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='data' name='federated.1st5jwa0chdwf11dyco370748ksl' />
      </datasources>
      <datasource-dependencies datasource='federated.1st5jwa0chdwf11dyco370748ksl'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98888' id='23' param='horz' type-v2='layout-flow' w='99374' x='313' y='556'>
            <zone h='98888' id='5' param='horz' type-v2='layout-flow' w='93124' x='313' y='556'>
              <zone h='98888' id='3' type-v2='layout-basic' w='93124' x='313' y='556'>
                <zone h='49444' id='20' name='Yearly Avg So2 and No2 In Air Between 1987-2000' w='46562' x='313' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49444' id='21' name='Yearly Avg So2 and No2 In Air Between 2000-2015' w='46562' x='313' y='556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49444' id='25' name='Avg SO2 And NO2 Level In Air Over Years' w='23281' x='70156' y='556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49444' id='29' name='Avg Spm Level In Air' w='46562' x='46875' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24722' id='31' name='Areawise Avg Level of So2 and No2 In Air' w='23281' x='46875' y='556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24722' id='33' name='Avg Rspm in Air in Top 20 Cities' w='23281' x='46875' y='25278'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98888' id='22' is-fixed='true' param='vert' type-v2='layout-flow' w='6250' x='93437' y='556'>
              <zone h='5000' id='24' name='Yearly Avg So2 and No2 In Air Between 2000-2015' pane-specification-id='1' param='[federated.1st5jwa0chdwf11dyco370748ksl].[:Measure Names]' type-v2='color' w='6250' x='93437' y='556'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30693' id='26' name='Avg SO2 And NO2 Level In Air Over Years' param='[federated.1st5jwa0chdwf11dyco370748ksl].[yr:date:ok]' type-v2='filter' w='6250' x='93437' y='5556'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5070' id='27' name='Avg SO2 And NO2 Level In Air Over Years' pane-specification-id='0' param='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]' type-v2='color' w='6250' x='93437' y='36249'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9375' id='28' name='Avg SO2 And NO2 Level In Air Over Years' pane-specification-id='0' param='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:no2:qk]' type-v2='size' w='6250' x='93437' y='41319'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5070' id='30' name='Avg Spm Level In Air' pane-specification-id='0' param='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:spm:qk]' type-v2='color' w='6250' x='93437' y='50694'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5070' id='32' name='Areawise Avg Level of So2 and No2 In Air' pane-specification-id='1' param='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:no2:qk]' type-v2='color' w='6250' x='93437' y='55764'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30693' id='34' name='Avg Rspm in Air in Top 20 Cities' pane-specification-id='0' param='[federated.1st5jwa0chdwf11dyco370748ksl].[none:location:nk]' type-v2='color' w='6250' x='93437' y='60834'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7917' id='35' name='Avg Rspm in Air in Top 20 Cities' pane-specification-id='0' param='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:rspm:qk]' type-v2='size' w='6250' x='93437' y='91527'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout active='true' name='Desktop'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#59a14f' fontname='Tableau Semibold' fontsize='24'>Air Quality Dashboard </run>
              </formatted-text>
            </title>
          </layout-options>
          <zones>
            <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98888' id='37' param='vert' type-v2='layout-flow' w='99374' x='313' y='556'>
                <zone h='4306' id='38' type-v2='title' w='99374' x='313' y='556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='94582' id='23' param='horz' type-v2='layout-flow' w='99374' x='313' y='4862'>
                  <zone h='94582' id='3' type-v2='layout-basic' w='99374' x='313' y='4862'>
                    <zone h='47294' id='20' name='Yearly Avg So2 and No2 In Air Between 1987-2000' w='49687' x='313' y='52150'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='47288' id='21' name='Yearly Avg So2 and No2 In Air Between 2000-2015' w='49687' x='313' y='4862'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='47288' id='25' name='Avg SO2 And NO2 Level In Air Over Years' w='24847' x='74840' y='4862'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='47294' id='29' name='Avg Spm Level In Air' w='49687' x='50000' y='52150'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='23642' id='31' name='Areawise Avg Level of So2 and No2 In Air' w='24840' x='50000' y='4862'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='23646' id='33' name='Avg Rspm in Air in Top 20 Cities' w='24840' x='50000' y='28504'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone fixed-size='160' h='94582' hidden-by-user='true' id='22' is-fixed='true' param='vert' type-v2='layout-flow' w='6250' x='93437' y='4862'>
                    <zone h='4237' hidden-by-user='true' id='26' mode='checkdropdown' name='Avg SO2 And NO2 Level In Air Over Years' param='[federated.1st5jwa0chdwf11dyco370748ksl].[yr:date:ok]' type-v2='filter' w='6250' x='93437' y='4862'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='5000' hidden-by-user='true' id='24' name='Yearly Avg So2 and No2 In Air Between 2000-2015' pane-specification-id='1' param='[federated.1st5jwa0chdwf11dyco370748ksl].[:Measure Names]' type-v2='color' w='6250' x='93437' y='9099'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='5070' hidden-by-user='true' id='27' name='Avg SO2 And NO2 Level In Air Over Years' pane-specification-id='0' param='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]' type-v2='color' w='6250' x='93437' y='14099'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='5070' hidden-by-user='true' id='30' name='Avg Spm Level In Air' pane-specification-id='0' param='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:spm:qk]' type-v2='color' w='6250' x='93437' y='19169'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='5070' hidden-by-user='true' id='32' name='Areawise Avg Level of So2 and No2 In Air' pane-specification-id='1' param='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:no2:qk]' type-v2='color' w='6250' x='93437' y='24239'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='31250' hidden-by-user='true' id='34' leg-item-layout='vert' name='Avg Rspm in Air in Top 20 Cities' pane-specification-id='0' param='[federated.1st5jwa0chdwf11dyco370748ksl].[none:location:nk]' type-v2='color' w='6250' x='93437' y='29309'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
        <devicelayout name='Phone'>
          <zones>
            <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98888' id='23' param='horz' type-v2='layout-flow' w='99374' x='313' y='556'>
                <zone h='98888' id='5' param='horz' type-v2='layout-flow' w='93124' x='313' y='556'>
                  <zone h='98888' id='3' type-v2='layout-basic' w='93124' x='313' y='556'>
                    <zone h='49444' id='20' name='Yearly Avg So2 and No2 In Air Between 1987-2000' w='46562' x='313' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49444' id='21' name='Yearly Avg So2 and No2 In Air Between 2000-2015' w='46562' x='313' y='556'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49444' id='25' name='Avg SO2 And NO2 Level In Air Over Years' w='23281' x='70156' y='556'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49444' id='29' name='Avg Spm Level In Air' w='46562' x='46875' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='24722' id='31' name='Areawise Avg Level of So2 and No2 In Air' w='23281' x='46875' y='556'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='24722' id='33' name='Avg Rspm in Air in Top 20 Cities' w='23281' x='46875' y='25278'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone fixed-size='160' h='98888' id='22' is-fixed='true' param='vert' type-v2='layout-flow' w='6250' x='93437' y='556'>
                  <zone h='5000' id='24' name='Yearly Avg So2 and No2 In Air Between 2000-2015' pane-specification-id='1' param='[federated.1st5jwa0chdwf11dyco370748ksl].[:Measure Names]' type-v2='color' w='6250' x='93437' y='556'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='52014' id='26' name='Avg SO2 And NO2 Level In Air Over Years' param='[federated.1st5jwa0chdwf11dyco370748ksl].[yr:date:ok]' type-v2='filter' w='6250' x='93437' y='5556'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='5070' id='27' name='Avg SO2 And NO2 Level In Air Over Years' pane-specification-id='0' param='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]' type-v2='color' w='6250' x='93437' y='57570'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9375' id='28' name='Avg SO2 And NO2 Level In Air Over Years' pane-specification-id='0' param='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:no2:qk]' type-v2='size' w='6250' x='93437' y='62640'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='5070' id='30' name='Avg Spm Level In Air' pane-specification-id='0' param='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:spm:qk]' type-v2='color' w='6250' x='93437' y='72015'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='5070' id='32' name='Areawise Avg Level of So2 and No2 In Air' pane-specification-id='1' param='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:no2:qk]' type-v2='color' w='6250' x='93437' y='77085'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='0' id='34' name='Avg Rspm in Air in Top 20 Cities' param='[federated.1st5jwa0chdwf11dyco370748ksl].[none:location:nk]' type-v2='color' w='0' x='0' y='0'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='0' id='35' name='Avg Rspm in Air in Top 20 Cities' param='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:rspm:qk]' type-v2='size' w='0' x='0' y='0'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7B3824F9-8626-4BAA-9684-E82C59256C7C}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Avg SO2 And NO2 Level In Air Over Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1st5jwa0chdwf11dyco370748ksl].[yr:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:no2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]</field>
            <field>[federated.1st5jwa0chdwf11dyco370748ksl].[none:location:nk]</field>
            <field>[federated.1st5jwa0chdwf11dyco370748ksl].[none:state:nk]</field>
            <field>[federated.1st5jwa0chdwf11dyco370748ksl].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E19F0737-0C9E-4173-9E9C-70C34ABF65E1}' />
    </window>
    <window class='worksheet' name='Yearly Avg So2 and No2 In Air Between 1987-2000'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1st5jwa0chdwf11dyco370748ksl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1st5jwa0chdwf11dyco370748ksl].[:Measure Names]</field>
            <field>[federated.1st5jwa0chdwf11dyco370748ksl].[none:date:qk]</field>
            <field>[federated.1st5jwa0chdwf11dyco370748ksl].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D14CA43-D34A-4992-AA94-B419D9F1349A}' />
    </window>
    <window class='worksheet' name='Yearly Avg So2 and No2 In Air Between 2000-2015'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1st5jwa0chdwf11dyco370748ksl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1st5jwa0chdwf11dyco370748ksl].[tyr:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]</field>
                  <field>[federated.1st5jwa0chdwf11dyco370748ksl].[tyr:date:qk]</field>
                  <field>[federated.1st5jwa0chdwf11dyco370748ksl].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>9.1375041491724538</value>
                <value>#2014-01-01 00:00:00#</value>
                <value>&quot;[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1st5jwa0chdwf11dyco370748ksl].[:Measure Names]</field>
            <field>[federated.1st5jwa0chdwf11dyco370748ksl].[none:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{43C3F643-1EAD-44B7-A474-DB3036B3247B}' />
    </window>
    <window class='worksheet' name='Avg Spm Level In Air'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:spm:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1st5jwa0chdwf11dyco370748ksl].[none:spm:nk]</field>
            <field>[federated.1st5jwa0chdwf11dyco370748ksl].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D35917C-B3C6-4AE8-80D6-1DA861AD3B33}' />
    </window>
    <window class='worksheet' name='Avg Rspm in Air in Top 20 Cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1st5jwa0chdwf11dyco370748ksl].[none:location:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:rspm:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1st5jwa0chdwf11dyco370748ksl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A76F3145-DA6D-453D-B466-93FE25E5C338}' />
    </window>
    <window class='worksheet' name='Areawise Avg Level of So2 and No2 In Air'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:no2:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.1st5jwa0chdwf11dyco370748ksl].[avg:so2:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1st5jwa0chdwf11dyco370748ksl].[Type (group)]</field>
            <field>[federated.1st5jwa0chdwf11dyco370748ksl].[none:location_monitoring_station:nk]</field>
            <field>[federated.1st5jwa0chdwf11dyco370748ksl].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15C58F32-C8A6-446D-8E7F-7835213746F7}' />
    </window>
    <window class='dashboard' name='Comparison Before And after '>
      <viewpoints>
        <viewpoint name='Yearly Avg So2 and No2 In Air Between 1987-2000'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1st5jwa0chdwf11dyco370748ksl].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Yearly Avg So2 and No2 In Air Between 2000-2015'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.1st5jwa0chdwf11dyco370748ksl].[tyr:date:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8FADFDFC-5E0F-46C0-BDC7-C6D481E4A3B8}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Areawise Avg Level of So2 and No2 In Air' />
        <viewpoint name='Avg Rspm in Air in Top 20 Cities' />
        <viewpoint name='Avg SO2 And NO2 Level In Air Over Years'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Avg Spm Level In Air' />
        <viewpoint name='Yearly Avg So2 and No2 In Air Between 1987-2000'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Yearly Avg So2 and No2 In Air Between 2000-2015'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1st5jwa0chdwf11dyco370748ksl].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='29' />
      <device-preview visible='true'>
        <device is-portrait='false' name='Large Desktop Monitor' type='Desktop' />
      </device-preview>
      <simple-id uuid='{28B67C96-7103-43A4-893A-AE00EC2B517F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Areawise Avg Level of So2 and No2 In Air' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Avg Rspm in Air in Top 20 Cities' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avg SO2 And NO2 Level In Air Over Years' width='192'>
      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
      aiFK4o41XAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Avg Spm Level In Air' width='192'>
      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
      /j+gp6ELRB8IkgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Comparison Before And after ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3dd3gc933n8feUXSwWvRGVAAkSINgL2EmJVJdt2bQlx7aS0/mxc7nE9uWS
      nGMn9+ScJ06ccpf4SezknksudmLHls921KxuFVLsDSBIgg29d2CxWGDrtPsDJCSKBLAAFgsQ
      83v9Q2J35jff2Z3PTv+NZFmWhSDYlLzQBQjCQhIBEGxNBECwNREAwdZEAARbEwEQbE0EQLA1
      EQDB1kQABFsTARBsTQRAsDURAMHWRAAEWxMBEGxNBECwNREAwdZEAARbEwEQbE0EQLA1EQDB
      1kQABFu7LQDHjhxGt8AMj3DsdE3Ujbz2+muTvtfXeIkfvfR21G1dvVjF+aoqTp27cMd7g91t
      nDl7jpNHD9Pt8UfdJsBrr70+8f9//Pu/xa9ZQITTZ+6czvXaC5w/X8W7753EvPla7ekzjE3R
      /tljb3H83GUAupuv0T0cumOYC0ff4WR1NadPHaOhre+O9xvq62cyS1MzI5w+eZLz589Sdek6
      lh7k8LvvcuTddxkJ6oz0tXPk+CkOHzuNBTReu8jpM2c4f/Fa1G2EAyP8+w//ido2DwBnjh+h
      urqamtrrsZuPeaZ+8I/NFUW8c/wCztF2tj74BL6hHq43dpCZW0hZUSbnLtRiGCZbduyio7kR
      KewlmJALQF9rHXJ2KTnJMjduNFFRUQ5A1dVWMmWTgAH9TdfJXbUWl+Wnoc1LltugoaMPWU1g
      57ZNANS3dPCpT31qoqb6q5cYHg1SvmEraTkF7C4oIext5e2q6xQ8vJ2gz0NtXROm5GDX9i1c
      vVRFxJCRHIls3biW+muXGA2aBCPmRJv5eTm8d+QEH3t0Bx7PMJYe4lzVRWSnm+3bNrG6YiMO
      h4PDv3gerwaZDvB5POjAjWu1hMIaIVNhd+XmiTZ7h4OYZhOwiUSXC92h0lBfj2r48VhpVK4r
      ZXjAS+WBh0m3dH7x8puU5h2k6uIVEpIyWFWYyVtvvY3PHybd7aCwrIKOq+dw5a8jOdKHllLM
      SOcNBr1jbNi6AzUywqXrjaRm5rJuZTYnzlwhMQGyC8soKcgCZLbv3otDgeeeewF1uJVVlQ+x
      3B3g1XeOg+bjiUOH6Lj4HhdbvbQ3tHHo0CFef+klIlvW4YRp26hcv5yN61Yz5I8AMOD18/H7
      Hoj5QjqfblsDpOWXYw3dIJSYS0aiyokzF9i1ayf1V2qwFBdFednIgV6OVTdw8dwxevwqG8uK
      AchalsXxo8fpq69mhJSbLeqENIs9G0s4eaGRrFSJ09V1XDl3moSMLE6cu8DunTsY6OmcqGHj
      mlIOHznC1YZW/H31dPgT2LVrByePHsbhcNDVdJWfv1HFQwcrAXClZJCdlkTvtTM0DEZoaO5g
      67ZtdLc34e9voNWrUlm5lUTn+7OqujNJk3wMBXQAjr7zLuu27WBNrsyJmlYcDpVTh19Dzygm
      03H7B3ajrolNW7Yx1tfBrd94f18dzsxS0lSTgYCBt6eFgTGd2upTtA4ZbFtbOvF5XKqu4vmf
      /oT1O/dz5PAxtmzfBZ4WRpQMVq5cQeXWjaTgpaa+l67+IeouX6TqYh1urZvWYYndO7dx9PAR
      jpw4w65du+iuv0JQG2Ng1KRyx26uXDhz85tVkTQ/z//0WdZX7qXPFyE33YnsTMfSRrGk8S8/
      N28Z/X09II3/FqY5ZHw6UbVRWLKa9CTXxGezfk0pVefP8cLLb/D+z83idsc+QEVxLivWbQVg
      sK+T6upq8gpLaLtyinZ/ArsqN6PrOkkZ+dy/eyuSND6e6s5GjXg5Wz/A9op8APrqqgkoblo8
      Ol11NaTkVRDob6BzRKMk04GqJtxR0Op1m3nwgQdov1zFsH+UhOQ0kBQkyaSvpZaT1wd55ulP
      k6iOT/jU4V+SkFXE5vVl6LqJM8GJBEhIjHkGyViWd9cZ33fwICffew+AoG7hdiq409II+Hwc
      fvU50korefT+HXeM53A6kaXx9m85c76WZDWEK8XN2dPvb1K5UnN4YP/2ic8IVDZXbuepz/0a
      V84dZ2TEQ+3FCxhJOaQ54NaAy8q3MVR3GsmZDWYIQ5aRQqM0tzRz4eIV1m1Yj3ewjwvV1WTk
      FaJYkOC8+Vnempil8+yzP+WRQ59l7cp88tIS6PVGMCNelIQ0ZCRMoLdngLz8AiQMAHwGqP4h
      qqurGQ2Gpmzjw1asrmD7jp2kWRECd/3UFx/1wy+4kjOQb/5a7t65g8ExHcVpkZVXRH1tM9We
      CJmpq0HJnBgnMzMLgAPbV/PcmX6Um6+3Duo8/clHUSUIB8IYQNGyVIJqFqCQn5XM+eoL9A16
      J9qqOn0cnIm484opLN1K29GjnD3TQvn6bdTXXaQkbxnV1dXkF5dSkJNBUVEhzQ03iAx4WL1S
      nqglMyuT3PJKat8+Qs1oLq7k9IlpZGVmIjmSKMlKZkBLZc/atRw7dgrJCHPf/oO88eIV0oa6
      qB7qYt3mShJVSM3MRL3ZLkBGZubEr4crI599e8bDcvz48YnP8Nawt2TkpHO1uholEmJ1xQby
      k00uNvWS6nKAJFGQk07VpWts37wOVfNRunEzI03nGZMzSCqooCK3G8uysCyLfbt30j44RoLi
      RFKdZGYkT8wbgObtRk7No+HaZZzuNDbtO8iRo8dpAe4/eAB83Rw9fgrLcvLA1jSS/CWcPnOG
      nJIy0tOyqKzMQhtun7KN7vZmGtr78aDTm5tIZ/1lLNVFQt5ykme6JC4QKWZdI+pB3v7lW6zf
      9xgF6a7phwdu1NYwFtIY9ms8cnBfTMoQhJmIXQAE4R4kzgMItiYCINjabTvBo6Ojs2okEAjg
      drtjUpAgxNNtAUhJSZlsOAD0kJ/Gtg4ys/MJ+QZQEtMpzMuOalxBWIxmtAmkupJIUMDvH0Iz
      EgmNjcxXXYIQFzMKQCQUpGD5CnwjPjQ9hKZr81WXIMTFHSfCphxYVWhpbaOsfD1h3xCKO336
      kQRhEYvJeYDR0VGxDyDckxb0MKgV8i3k5Be9iGbQMzRK16D4nObLjDaBYknXwrR8/z/i3P0V
      Usv3k5GSuFClLAjDMBkeC9E/7GdoJMCgL8ig18/gSBBfIAyAU1XISkvEssYvNT60fw07KgoX
      uPKlZUE3gUJjXrQ3v86/NuTjyXuAyjUF7FlfRHbavX9OIaIZtPeNMOgLMOANMOj14xkN4vGF
      MC0LhyKTnuIiJ81NZmoiyzKSyEp1k5PuJsV951WygyMBfnGijsYuD0/sLWfPuiJkWbrLlIWZ
      WPB9AMvUCb31DbTkImqSn+Ds9U6GRgJsLc9n/8ZiinJS51pe3Jmmxbf+7RiFOalkp40v3Dlp
      SWSmJpKe7JrTgjsaCPN2VTOnrnTw4LaVPFxZitOhTD+icFcLHoBbwie/ixUYJOGhPyaiw4WG
      Hk5f7WTAG2DjymXsXl9EaUHGXEuNi3eqmvGMBvnMA+vnbRrhiM6b5xo5UdvB/o3LeXznahKc
      C7ZFOyuBkMalpl4yUxJZU5y9IDUsmgAARGqfR28+QuJH/heSc3wzyDQtrrT0c+pKB41dHsqK
      sti/cTlrS3IW5SbAaCDMn/7wGH/+nx6Myy+zYZgcv9zOm+caqSjO5pP3VZCeHN3l6AthwOun
      uq6HM9c60Q2THRUF9AyN0esZ46O7y9i+piCu3+uiCgCA3nKMyPnv4/rYt5GTbv9VME2L620D
      nLnWRUPnEMW5aezfWMzakmwc6uLYDPjHX1Sxc20h28rz4zpd07Q4e72TX5yoo6woi0P71yyK
      fSnTtGjpGaa6vocL9T2kuhPYu2E528rzSU16f1/H4wvy5tlGquq7ObC5hANbVsQlyIsuAABG
      3zVCh7+F67FvoWSWTjpcW6+XU1c7qa7r5jee2LZgq9Fb6toHeflUPV/73N4FreNqSz8vHr+B
      2+XgyfvWsiI/vicsI5rB5eY+aup7qO/0sDI/nd3rithYumzaH6qIZnD6aidvnG2gODeNj+4q
      m9f6F2UAAExfD6HXfx/n/t9DLdo+5bDDo0H+6tkT/MkXDpKY4Jhy2PlimhZ/9L3DfPWzexbF
      Ly9AY6eHf3/vGrIMT92/jtVFmdOPNEujgTBnr3VxqakXjy/E2pJs9qwvYlXh7KfZ2OnhtTMN
      eHxBHt25ip0VBTFf0y/aAMD4ibLga1/FsfEpHOWPTzns+RtdnL7ayX99alfM64jGa6frCWsG
      T96/dkGmP5WeoVFeOHaD/mE/61fm4FAVEhwKCQ6VBOf7/3eoConO8dc+OMxk+zJdgz7OXuvi
      SnM/kiSxpSyP3esKyUlPimn9w6NBjtS0cqK2nZ1rC3l85+qYbB6FI/riDgCAZWiEfvlHKDkV
      OHd8ccph//eL59lWnsee9cvnpZbJeHxB/vqnp/jWrz+Aoizee4yGR4O0940Q0Q3CmkE4YhDW
      9PH/azqRD/wd0cffD0V0dGO8kxPTspBv9jphWha5GUlUludTuaYAt2v+17ymaXH6Widvn28i
      NSmBQ/vWRL2GiWgGLT3DNHZ5aOoepntwFJdTXfwBALAsk/CJvwU9QsKBryHJdz/cFwxr/Mm/
      vsfXnt4X182Q7zx3locrV7J+5bK4TdPumro8vHmuic4BHx/dtZpd64om1lQRzaC110tD5xBN
      3cN0DfhwqAor8zNYszyLVYUZ5GeNL6/3RABuidT8GKOrGtdjf4HkuPulE42dHn789mX+5AsH
      570egNrmft6uauK/fWZPXKYn3M47FuJITSsna9spzEmlzzOGIsusyEujtCCTsuWZFGWnTnpo
      9Z4KAIDW+C7axWdxffSvkd1Zdx3mhWPXUWSJQ/sr5rcW3eB/fO8w//0/3Leoj73bgWla9Hv9
      5KS5Z7QZung3WCfhWP0QCft+h9Arv4s53HrXYT65v4Lquh5ae7x3fT9WXjlVH7fj1cLUZFki
      LzN5xvtg91wAAJT8zbge+3NCb30Do+fSHe/LssRXntzJP71STUQz5qWGwZEA1XU9PLZj1by0
      L8THjAKgh/zcuHGD6/XNVJ09RUf3nV18x4ucXozr439H+NTfozW+e8f7uRlJPL5zNf/2yzsD
      Egvff/UCn39886I+6iNMb2a3RLrcOCSTjLxcfIrGwMAghXk5mKaJruvTNxBrzjScH/s7Iq9/
      FVKXI33orPG+DYWcv9FF9Y0uNq/Ojdlkaxp6SXY7Kc1PW5j5FmJmRgHwD3ThCUNyJIimWbjd
      iciyjCzLqOoCXYmoJsPWX8NofY+EZeV3vP3lT+7gmz94j/Li7LteZz9TEc3g+WM3+KNn7lu4
      eRZi5p47CnQ3lqERfPE3cX/6X+76/uWmPt4828jXf3XuHfD+5O1astPdPBrHbX/LMpEksak1
      H5bEpyopDqSkZZgjXXd9f9OqXJZlJPHW+aY5TadnaJQb7YNxW/jNwBCht/+YwI8/TaT2+bhM
      026WRAAA1BX70BvemvT9Zx7dxJGa1jndYP7912r44ke3znr8aFmWSeTKC4Re+V3U8sdw/+rP
      ML2tBF//uuhIIMaWTgBWHkBvPT7p+4oi81+e3MH/eakKw5j5A3xOX+0gPytl3i8tNgYbCL74
      JazRHhKf+h5qyT4kxYHrvq/iWPcJgi99CaM7+gcYClNbMgGQXKmgJGCFJu+usTA7lb0blvPz
      I9cmHeZugmGNF47d4OmHNsy1zElZWpDQ8W8TPvkdEg7+AQl7voL0oUdIqSv24/rEdwmf+2fC
      57+HZd0rT+JavJZMAAAcZY+gNbwz5TAf3V1GS88w19sGo273Z4evcmjfmnm74lFvfo/gi7+F
      kl2O+9A/THkTkOzOIvHQPyBJCsGXvoI52jsvNdnFkgqAuvoh9KY7T4p92Jc/tYN/eb2GQGj6
      vk07B3y0942wf1NxLEq8jTnaS/DV30NvOU7iJ76LY+3HoxpPkmSc279Awt7fJvja76M3H415
      bXaxpAIgudJAC2CFp3qkNaQnu/jsg+v551fvfEj2B5mmxfdevcAXPxbbHV/LMolU/5DQm3+I
      c/sXcT30jfHaZ0jJXYf7U/+IVv8moSN/iaWHY1qnHSypAMDNneGmw9MOt31NAQkOhdNXOyYd
      5tilNsqLsmLaN5HRc4nAz54BSSbxqe+h5G2cU3tSQjKJj/8lSv4mgi/8ZwxPc4wqtYelF4Cy
      R9FbjkU17Bc+soUXjt1gcOTOp9oGQhqvnWngqQOxucXRCo0QevfPiFT/gMSPfwfntmcmvbFn
      NhwVH8P1yDcJH/6WOGcwA0suAHJaIVbIG9XmQIJT5bc+Uck/vHAO07z9hPizb1/mVw6um3Nn
      U5Zlol1/hcALv4laeoDEJ/72ju5eYkXOWEHik/9XnDOYgSV5MYuyfCdGx1nUlfdPO+yqwkw2
      rcrlpRM3Jm5ob+z0MDgSZOfauXVEa3iaCR/7m/GjO5/54R2HNeeDJKu47vsqeusJAi99Cdf9
      v49SMPd9GCsSwBxqwPS0YAw1Yvl6kDNKkHMqUHLKkTNWzL34BbAkrgX6MGOgjsiFfyPxsT+P
      anjTtPjmD47yhY9soTg3jT/+lyP89lO7yM2Yfe8G2rWX0a6/QsLBP0TJWph7BszAEKG3voFS
      uA3n9i9GdT2RFR7D9DRhDjVhDDVielpAD4LDjZJdhpyxEjl7NVJyHuZQ0/iwAzcwh9tAkpAz
      VyFnl6FklyPnVEz08LdYLckAAPh/8jncT/8k6ovIBrx+vv2z0+zdsJxQRJ9Tv56WqRP4+efH
      f/VjuJ0/q1osE+3Cj9DbTuF65JvIKXnjr4dGMD3N47/og/U3F/QQOJNuW9DlzFWT3n99x7RM
      HdPTgjlYj9F/HdPTjBX0IifnjK8pctePt5se3147prJkAxA+/m2Ukv2oxdH3E3T0YhvPH7vG
      t7/86Jw6YNLq3sAcbiVh95dm3UasGX3XCB35CyRnEmgBJFcactaqWS3oM2UGhsZD0Xcdc6gB
      y9cNihM5YwVyTgVq8U7ktIUJxZINgNFzCa3+l7gOfH1G45mmNefOWQPP/wauj/zVpDftLxTL
      1MHQ5m1Bn1Ethja+6eRpQW87heXrQs4qQyneiVK4fd4OFHzYktwJhvH7hsPH/mbG48114TeG
      mpCSshfdwg/jO8gs8CbZLZLiQMnbiJK3Ece6T2BZJuZgA0b7GcLv/ilmYAglfzNq0Q6Uwsrx
      a73mweL4NOaJnF2O0Vs755NNM6HV/Ajn5s/FbXpLhSTJKDlrUHLWQOXnxwPRdxW94zyRSz8F
      U0PJXY+yfBdKwbaY7Vwv6QCoqx5Ab3gnbgGwQj5MbztK/ua4TG8pkyR5Yg3Bji9iGRpGzyWM
      jrNEqn4AmCgF21CKd6PkbZz1IeYluw8A49uZgZ9/nqSnfxKX6UWqf4iUkIJjw5NxmZ6dWVoQ
      o7sGo+M8Rm8tSBLK8h2opQ+gZJdF3c6M1gB6yE9jaweupDTCvgEUdzqrV8b+KslYkRQHcuZK
      TG87cvr81mlZJnrDWyROcl+yEFuSIxG1ZC9qyfizGKzwGHrHWbSaHxH2tiNnr0Fd/RBK4bYp
      D0XPeA3Q29mG4YDwmAvws2LlCkZHR0lKim2X2LFitLyH5WlBrfzCvE7H7DiL0XEGx97fmdfp
      CFGwLIzuCxhtJ6GnBim1EHnF/Sgr9oPj9n2HGXaL0sGN9n7Wlq9iYLgJxZ228N2iTEMpPUCw
      5keou35jXqcTuPz/cB38A+RF+jnYjVqyC0rGzwEZnmaMluNE3vgaWCZq2cOopQ8gJy+bWQCS
      cpZzMGf8hEVu9vw9bSSWJMWBlJCC6etBTp2f53aZIx1IsrJgJ3OEqSmZpSiZpTgrP48ZGMJo
      OU74vf+JFRhc2jvBt2jXXsYKjeDc9sy8tB869je3bY8K9wZLCy69y6HvRi09iN5+el7atvQw
      ZneNWPjvQZIj0R4BkFypIMlT9hgxW3rdG6jTPL9MWLxsEQAAtfQAetORmLerXX0Rx7pDMW9X
      iA/7BKBkP3rj1F2mzJTRXTN+FeU8XacizD/bBEBOzccKj2JF7rz/d7Yitc/h2PJ0zNoT4s82
      AYCbPUa0nYpJW2ZwGGu0Z0an3YXFx14BKH8kZptB2uWf49j0mZi0JSwcWwVATluONdaLZUzf
      I9xULFNHbzmGuvrhGFUmLBRbBQBAyd+C0XF2Tm3oje+grti/4Pf7CnNnuwCoZQ+j1/9yTm1o
      V3+BY+OvxKgiYSHZLgBK7gYMT/OsuxY3PM1ICSlxu2dVmF/TBsA0l14f9ErBVsze2lmNq134
      sdj5XUIm3Yh9+bkfQUoxxbnJbNlSGc+a5p1j9UPoje/M+NZFK+TDHG5GLdo+T5UJ8TbpGqC0
      Yiu7KvK5VNcWz3riQinYit5+ZsbjaXWv41j7iXmoSFgokwagfHkGJy42kpk2837r7wXKsrUY
      /TeiHv5WJ7fiwrelZdIAyA4XCaqC2724+3acLXX1wzM6KWZ0nEcp2LLo+7oUZmbSAJw8eRos
      DX0WT1S8FyjFezC6p35CzAdpF5/Fuemz81iRsBAmDcDGTVtIS0sj5x659XGmJMWBlJyLOTL5
      E2JuufUA7vnuWUKIv0kD8NqrLzMyMsKQx3vb6z7f+EMXujta6ejum9/q5plaegB9mqdKAmhX
      nsex8dNxqEiIt0kD8Myvf5knnniCB/fvnHjN1EJcunodgNbW1kV9H3A01OK96C1TP2HR0sPo
      7WdQxC2PS9KkATC0EG1tbVy9epWwPr4fIDtc5GZnADobNu+gs/XefiCb5EpFSi3EGGqadJjI
      hR/G/HlewuIxaQAiQy1caR2kqbGBU6fGbyjXQmNYpkV3n5fg2BBFKyZ/oPO9wlH2KHrz3W+V
      tCwTvfkoatkjca5KiJdJA+DMWI4zNEju8lWsLRt/xI/DlcyaNWsoyM0mt6CY9JR7/5CgUrIX
      Y5KbZPSmI6jFe8Sv/xI2aQAsy0J1yLS1tZGXnxfPmuJKUhxIrrSJIz0fpNU+J3Z+l7jJ9wH0
      CBFdYt/ePfGsZ0Goqx6846TYxFWfKUs3/MIUAaipqWGsv5nq60vvWqAPU1ceQG89fttrWs2z
      4qpPG5j8UghZweFQUZTZPyzuXiG5UkF1TXScNf5M3EZx1acNTNs3qKZpOByOKRtZ7H2DRkO7
      8gIAjg1PErn8M5BknOKuryVv2htiplv4lwql9ABa4zvjV31eewVH+UcWuiQhDmx3S+RkZHcW
      RPzoTUdQCjYjJSQvdElCHIgAfIBaepDwu38qrvq0EXGG5wPU8scxh1vEVZ82YosHZAjCZMQm
      kGBrIgCCrYkACLYmAiDYmgiAYGsiAIKtiQAItiYCINjajANwq1uU4YFefP5QzAsShHiaUQDe
      7xYlQt+Qn+6O1vmpShDiZEbXAr3fLYqBQ3UB488PME0TXdfnoz5BmFczCoAWGiPgD9Dd58eh
      BFES05FlGVmWUVVxXZ1w7xEXwwm2Jo4CCbYmAiDYmgiAYGsiAIKtiQAItiYCINiaCIBgayIA
      gq2JAAi2JgIg2JoIgGBrIgCCrYkACLYmAiDYmgiAYGsiAIKtiQAItiYCINiaCIBga7MOQNXZ
      U3R098WyFkGIu1l35ZCdncXAwCCFeTmiWxThnjXLAOhomoXbnSi6RRHuaaJbFMHWxE6wYGsi
      AIKtiQAItiYCINiaCIBgayIAgq2JAAi2JgIg2JoIgGBrIgCCrYkACLYmAiDYmgiAYGsiAIKt
      iQAItiYCINjarAPQ3tJIV+9gLGsRhLibZQCCaEYiobGR2FYjCHE2yxt5FTQ9BGgxLUYQ4m2W
      AXCSm5WE4k6PbTWCEGe33RQ/Ojo6q0YCgQBut3vib8uykCTptmGieS1Ww9wr44maFr7t29YA
      c+nZ4YPjRluwYRgoijKj8aJpJ9rxYlXT3V4TNd0bNYluUQRbi+N5AIvOthYCYY3hgV58/hAh
      v4/egWEAfD5f1C0Fx0bo6O7DMjTaO7oA6OpoRzMsPP09DA5H29bkNYWDYzQ2t2JG+fMwVU2Y
      OkOe6I+Y3ZqHW7W836ZBU10dg97oNlVNPULTzXm4Vcut+dTDQVpv1jmXmkJjI9TV1dE36J11
      TYMDA+P/9nYx7PNHWdHk352hhWjr6I6qlbitAfSQn5Ap097ahCwncusIkgPIKlhGY3MX27ds
      jGp6Xq+Xga5uDIdMQXYqba1DZK0owTc4QN6yLLq7ulm3ft207UxV07KSEgxfL14zixX5qXOq
      ySUbjGmwYW151PPX3dWNrMg4AE2GguxU+vu9dPlMdm9bR4I6/W/XqM+LbPppaBhk2aqV+Aa7
      wXQAGmG/j+SsAlatKJpTTcPhZIrSLdoGQ5Quz51VTaopocugR0zAYMOGDdO2M9V3F0SiJCeR
      wXA6Kwum/u7itgZQVIXW5mZWrynFobpwqA4cqgOX6iAhNZPUpISo2wr5R0jMysEhO0hJSSIw
      FiApJQWHDJ7+bvKLV8y5JkWV6PcGcUjR9Xk6WU2q4adn0Etff3/U83drHm7VYtxsU3LlcP/2
      Chrq6qNryNDpHNIpXJZy8/MxJuZTUl249TFGojySPVlNRiRMS0cfK6JY+CerSVKTcaATiUQw
      pegOTE713WXnpNPd24+mTf/dxS0AwVEfkqoyPBzBoQRxJaeRluwiqDiIeAYI+AN4RwNRtRXw
      B/CP+MjNzeRqQw/b9m2jp+EqmbnLCAQ1RrzRrY6nqink9WJaEimpyXOqKauojD27d7Jlw9qo
      2gF9Yh5u1VJ6s8287ATq6hvILSiMqqUxvx/0EK6s3JufT+nEfBbm5zBiOUl1zK2m5cuzycjK
      inpBultNCYqfzPyVpCU5SU2dfm0LU393SbKCqaazujhz2nbETrBga+JiOMHWRAAEWxMBEOJM
      51J1NYPesYUuBJjDE2IEYXbG6OoN0tb2Frv27aS+vp2uvl527tzF6EAn7sxCylZGd2g2FsQa
      QFgAEm6nk87uXrwdVxjS0ijNglMXWxkZie4IXqyINYAQZy4SHWGWrVhHkhRGK55SuOUAAABE
      SURBVC5nTW4xDYOwfW0BGRkZca1GHAYVbE1sAgm2FpMAOJ3OWDQjCHEXk00gQbhXiU0gwdZE
      AARbEwEQbE0EQLC1/w/0E6Lp8cTi3AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Yearly Avg So2 and No2 In Air Between 1987-2000' width='192'>
      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
      ARChJgEQoSYBEKEmARChJgEQoSYBEKFW5MJYNgcOHiZQigu9pzl+qpcF+US9EGVS5MJYGtGY
      hVIOth+hWnPIKkVMFsYSy1SRC2NFMHUN0PFchzweJqDLwlhimZrHwlguA8OTNDdUkfEMorIw
      lljGZGEsEWpyFkiEmgRAhJoEQISaBECEmgRAhJoEQISaBECEmgRAhJoEQISaBECEmgRAhJoE
      QISaBECEmgRAhJoEQISaBECEmgRAhJoEQISaBECEmgRAhNq8A3Dm5FGOn+5byFqEKLmilkV5
      vWw2i5GIoZQikIWxxDI1zwAErFm3heHes+Q0jYRhoOs6pjnvPAlRFvPcBdLIzIxjrWoksbD1
      CFFS83zL1mhuX72wlQhRBnIWSISaBECEmgRAhJoEQISaBECEmgRAhJoEQISaBECEmgRAhJoE
      QISaBECEmgRAhJoEQISaBECEmgRAhJoEQISaBECE2jwDoLjQe4pjp86iFrYeIUpqngFwsP0o
      SS0gt7D1CFFS8/xMsIHn2uTwMRa2HiFKap4BMGlpTJLxDKILW48QJaUppRRAJpPB9/15N5TN
      ZkkkZJEUsby8NgJUVla+48aSySRBEKDrbz60uNLvL68qZxjG29632N/7vo+u62iadk11ANd0
      38ttv7FmpRRKqTfdv9jHcqW2i31Or/RYrtTuW7VRzGMppu0gCNA07R091wtZ82sjwDuVSqVI
      JpNF/c3VXqyFsNhtL0a7i9n2cqx5Mdu+3G5Z1zJcrCdN2i5du8u17cvtljQA6akxzg6Ms3lN
      O6d6LxCrrMH05pjN2TQ1tzI1OYHta2y7fmPRbY8MnGM6r9FcHeHiyDh1Te2kRvpxiNC8qoKJ
      qRSrWrpobShulPLsLHsOHeXmnTs4c/I4WV+ns7GaobFpausbmRkbgUiCLZvWUexLlUlNcqJv
      kG2b1nDi1FnMeDUJ3WU6naFn7Vr6evuoqmtkTWdrUe0qFdB3bD+Rls1os0NMTqdp6exiZHCA
      aEUN9ZUGg1Nz3LBxXZEVQ+Dm2XfwMFtu3MFg7ykyTkB7Ux3DYxPUNnbgzo4yk/HYuu36os8Q
      5manOXL6Aru2buTYsRNo0UrqExpDM3mu62iif2iYimQTXe2NRdZsc+DQITbesIOhc6fI2AHt
      zasYHpso7ZXgypp64hGd3Nws8apaZiYncBwbz3GIVtbQ3lBNU0v7vNpuaG4H3yaVnqW+sZGx
      4SFs28axbVzHwfc9HK/4g3zDirGqpgoVONi+jjGXYca28XwPOz+Lp8VxUjM486g5UVVLZdzC
      yc9hRKvJTE2SzuVpXJXgyP6TrN6wmSA/N4+WNdpaGrFdn8xcnubmJGeO9xKrrCE1OU5NQwuW
      Nr8THpoZoam+hsD3ybmKWODSPzrJqsYmxoeH6OjoxDLnd3I8WpGkqiJK4GZRRgX5mWlSORsz
      O4efqATfndeFV820aKqvwfd98k5AXHmcHx5nVUNTaQMQ+D6O65CoqSdhBhiRKLanaGuqJZPJ
      MTyZoXnVfA7GFb7n4bouza1tONlZYnELIkmqIxrjs3m6ujqYS6eLb1kpPM/FCUzammrJaxpu
      JsfqrtXkctDSkMA3zXkNpSooPB9WvIaaCgMsi862NmZmMrS01TE5PontBfNoGbxLz0dbexsz
      Uyna166hwlIYkSiB7+G4Dn4wj7aVwnNdHB/aW+rJej493V242VmiFRWcPHmarp7ueXUsFQS4
      roMyK2msjRKYJi3NzeQ0wHbo7OoiPTP9DmpWtLU0Mud6rO3uxsvNYjzyyCOPzKPWN7Ftm1gs
      9pb3SU1P4AdgRuI4+TxdPT2sSlaQcXTam1eRqKwkYlnz2v746DBoOvGKKmwnoKe7h4QVEE3W
      09PexPhEiq6uDgy9uB0VJz9HNu/iB2Dg09DaQWtLI5MT06zuXk0+M0trZzcxq/gIZGam8HyF
      ZkXx7Byd3WvQfAcjUUtnRxteLkVzaweWWWR3UgEjEzMY+CTiMbAqaW+qJZ2epau7h9npMZTS
      icQriRZZt2fnSM3ZKKWIGIpkQyvVcYvZrMua7nbcvM3sXI5kbbLoEGRnp3HdAKVbBK5N++oe
      CFxqG1qoiOiMjk3T1d2NaRTXsufkSWXyBIEiakJ1fTPJRITZrFPes0BClJvMBhWhJgEQoSYB
      ECWVTqVQSpG+xhMSrp1jdGKKwHPoP3+OdGZh5x/Ll3qJkho+fZDjRpKcrdO1yiKI1VKh5Ric
      ytPVVMvU3BwdnT3Mjl9kJOUw1t+P3tDCzSrOnmN9mNn9/Np77+XMydOs7uzg+z94nId+68MM
      ne+la/0Wairf+kTMG8kIIEpq/c47OfLKS2zf2MxPnn+ZQ/sPMDw6ypEXfsaeffsZyrhYms8L
      ew7jj59j0K1nx/ZNAFTV1NFZa9I7MM70xDD7Tg7Q3NzCyImX6R2e5MCR40XXIwEQpaUZ9Kxb
      T1VFNc31Nay9bi0T4xPUNzSQqKxh/doeDMOgvjrKUMZjdWM1BqAZFhMDfYwESSrdSax4NdWV
      MaK6h5VswjJN1nZ1FF+OnAYVYSYjgAi1/w8jXiOO8dFytwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Yearly Avg So2 and No2 In Air Between 2000-2015' width='192'>
      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
      EB441hQpxJQAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
